{"version":3,"sources":["AppContext.tsx","hooks/createContext.tsx","utils/environment.ts","utils/api.ts","Components/Trending.tsx","hooks/useAsync.ts","hooks/useDarkMode.tsx","styles/theme.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["initialState","trendingByDay","appReducer","state","action","type","payload","ctx","React","undefined","c","Error","Provider","createContext","appContext","AppProvider","AppContextProvider","children","useReducer","dispatch","value","environment","apiKey","process","baseURL","imageBaseURL","fetchTrending","a","url","fetch","response","json","data","H1","styled","h1","props","theme","size","xxxl","xs","MediaScroller","ul","lg","sm","Figure","figure","Trending","fn","useState","setState","callback","useCallback","console","error","useAsync","trending","loadTrending","log","useEffect","results","map","item","alt","title","loading","src","path","poster_path","id","useDarkMode","darkModeQuery","window","matchMedia","matches","isDarkMode","setIsDarkMode","darkModeHandler","addListener","removeEventListener","getTheme","hue","saturation","lightness","light","brand","text1","text2","surface1","surface2","surface3","surface4","surfaceShadow","shadowStrength","dark","sizeStepUp","n","up","result","typeScale","colors","xxxs","xxs","md","xl","xxl","mediaQueries","below768","below375","GlobalStyles","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ed910a9.chunk.js","sourcesContent":["import { useReducer } from 'react';\r\nimport createContext from './hooks/createContext';\r\nimport { TrendingByDay } from './types/TrendingByDay';\r\n\r\ntype State = {\r\n  trendingByDay: TrendingByDay | null;\r\n};\r\nconst initialState: State = {\r\n  trendingByDay: null,\r\n};\r\n\r\ntype ActionType = {\r\n  type: 'UPDATE_TRENDING_BY_DAY';\r\n  payload: TrendingByDay;\r\n};\r\n\r\nexport type ActionTypes = ActionType['type'];\r\n\r\nfunction appReducer(state: State, action: ActionType): State {\r\n  switch (action.type) {\r\n    case 'UPDATE_TRENDING_BY_DAY':\r\n      return {\r\n        ...state,\r\n        trendingByDay: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\ninterface AppContext extends State {\r\n  dispatch: React.Dispatch<ActionType>;\r\n}\r\n\r\nconst [appContext, AppProvider] = createContext<AppContext>();\r\n\r\nexport const AppContextProvider = ({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) => {\r\n  const [state, dispatch] = useReducer(appReducer, initialState);\r\n  return <AppProvider value={{ ...state, dispatch }}>{children}</AppProvider>;\r\n};\r\n\r\nexport { appContext };\r\n","import * as React from 'react';\r\n\r\nexport default function createContext<A extends {} | null>() {\r\n  const ctx = React.createContext<A | undefined>(undefined);\r\n\r\n  const useContext = () => {\r\n    const c = React.useContext(ctx);\r\n    if (c === undefined)\r\n      throw new Error('useContext must be inside a Provider with a value');\r\n    return c;\r\n  };\r\n  return [useContext, ctx.Provider] as const;\r\n}\r\n","const environment = {\r\n  apiKey: process.env.REACT_APP_MOVIEDB_KEY,\r\n  baseURL: process.env.REACT_APP_BASEURL,\r\n  imageBaseURL: process.env.REACT_APP_IMG_BASEURL,\r\n};\r\nexport default environment;\r\n","import { TrendingByDay } from '../types/TrendingByDay';\r\nimport environment from './environment';\r\n\r\nconst { apiKey, baseURL, imageBaseURL } = environment;\r\n\r\nexport const fetchTrending = async (): Promise<TrendingByDay> => {\r\n  const path = 'trending/movie/day';\r\n  const url = `${baseURL}${path}?api_key=${apiKey}`;\r\n\r\n  const response = await fetch(url);\r\n  const data = await response.json();\r\n  return data;\r\n};\r\n\r\ntype ImageType = 'poster' | 'backdrop' | 'profile';\r\ntype Size<T extends ImageType> = T extends 'poster'\r\n  ? 'w92' | 'w154' | 'w185' | 'w342' | 'w500' | 'w780' | 'original'\r\n  : T extends 'backdrop'\r\n  ? 'w300' | 'w780' | 'w1280' | 'original'\r\n  : T extends 'profile'\r\n  ? 'w45' | 'w185' | 'original'\r\n  : never;\r\n\r\nexport function getImageURL<T extends ImageType>(\r\n  path: string,\r\n  type: T,\r\n  size: Size<T>\r\n) {\r\n  return `${imageBaseURL}${size}${path}`;\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { appContext } from '../AppContext';\r\nimport useAsync from '../hooks/useAsync';\r\nimport { fetchTrending, getImageURL } from '../utils/api';\r\n\r\nconst H1 = styled.h1`\r\n  font-size: ${(props) => props.theme.size.xxxl};\r\n  padding-inline-start: ${(props) => props.theme.size.xs};\r\n  padding-inline-end: ${(props) => props.theme.size.xs};\r\n`;\r\n\r\nconst MediaScroller = styled.ul`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  gap: ${(props) => props.theme.size.lg};\r\n\r\n  padding-inline-start: ${(props) => props.theme.size.lg};\r\n  padding-inline-end: ${(props) => props.theme.size.lg};\r\n  padding-block-start: ${(props) => props.theme.size.sm};\r\n  padding-block-end: ${(props) => props.theme.size.sm};\r\n\r\n  overflow-x: auto;\r\n  overscroll-behavior-inline: contain;\r\n  scroll-snap-type: inline mandatory;\r\n  scroll-padding-left: ${(props) => props.theme.size.lg};\r\n  scroll-padding-right: ${(props) => props.theme.size.lg};\r\n  scroll-padding-inline: ${(props) => props.theme.size.lg};\r\n\r\n  @media (prefers-reduced-motion: no-preference) {\r\n    & {\r\n      scroll-behavior: smooth;\r\n    }\r\n  }\r\n\r\n  & > li {\r\n    display: inline-block;\r\n\r\n    &:last-of-type figure {\r\n      position: relative;\r\n\r\n      &::after {\r\n        content: '';\r\n        position: absolute;\r\n\r\n        inline-size: ${(props) => props.theme.size.lg};\r\n        block-size: 100%;\r\n\r\n        inset-block-start: 0;\r\n        inset-inline-end: calc(${(props) => props.theme.size.lg} * -1);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Figure = styled.figure`\r\n  scroll-snap-align: start;\r\n\r\n  display: grid;\r\n  gap: calc(${(props) => props.theme.size.lg} / 2);\r\n  margin: 0;\r\n\r\n  cursor: pointer;\r\n  user-select: none;\r\n\r\n  & > picture {\r\n    inline-size: calc(${(props) => props.theme.size.lg} * 8);\r\n    block-size: calc(${(props) => props.theme.size.lg} * 8);\r\n  }\r\n\r\n  & img {\r\n    inline-size: 100%;\r\n    block-size: 100%;\r\n    object-fit: cover;\r\n\r\n    border-radius: 1ex;\r\n    overflow: hidden;\r\n\r\n    background-image: linear-gradient(to bottom, hsl(0 0% 40%), hsl(0 0% 20%));\r\n  }\r\n`;\r\n\r\nconst Trending = () => {\r\n  const [trending, loadTrending] = useAsync(\r\n    fetchTrending,\r\n    'UPDATE_TRENDING_BY_DAY'\r\n  );\r\n\r\n  const { trendingByDay } = appContext();\r\n  console.log(trending, trendingByDay);\r\n  useEffect(() => {\r\n    loadTrending();\r\n  }, [loadTrending]);\r\n\r\n  return (\r\n    <section>\r\n      <H1>Trending</H1>\r\n      {trending.state === 'SUCCESS' && (\r\n        <MediaScroller>\r\n          {trendingByDay?.results.map((item) => (\r\n            <li key={item.id}>\r\n              <Figure>\r\n                <picture>\r\n                  <img\r\n                    alt={item.title}\r\n                    loading=\"lazy\"\r\n                    src={getImageURL(item.poster_path, 'poster', 'w185')}\r\n                  />\r\n                </picture>\r\n                <figcaption>{item.title}</figcaption>\r\n              </Figure>\r\n            </li>\r\n          ))}\r\n        </MediaScroller>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Trending;\r\n","import { useCallback, useState } from 'react';\r\nimport { ActionTypes, appContext } from '../AppContext';\r\n\r\ntype AsyncState<R> =\r\n  | { state: 'LOADING' }\r\n  | { state: 'SUCCESS'; data: R }\r\n  | { state: 'ERROR'; error: string };\r\n\r\ntype Unwrap<T> = T extends Promise<infer U> ? U : T;\r\n\r\nexport default function useAsync<T extends (...args: any[]) => Promise<any>>(\r\n  fn: T,\r\n  type?: ActionTypes\r\n): [AsyncState<Unwrap<ReturnType<T>>>, (...args: Parameters<T>) => void] {\r\n  const [state, setState] = useState<AsyncState<Unwrap<ReturnType<T>>>>({\r\n    state: 'LOADING',\r\n  });\r\n  const { dispatch } = appContext();\r\n\r\n  const callback = useCallback(\r\n    async (...args: Parameters<T>) => {\r\n      try {\r\n        const data = await fn(...args);\r\n        setState({ state: 'SUCCESS', data });\r\n        if (type) {\r\n          dispatch({ type, payload: data });\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n        setState({ state: 'ERROR', error: 'Network Error' });\r\n      }\r\n    },\r\n    [dispatch, fn, type]\r\n  );\r\n\r\n  return [state, callback];\r\n}\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst useDarkMode = () => {\r\n  const darkModeQuery = window?.matchMedia('(prefers-color-scheme: dark)');\r\n  const [isDarkMode, setIsDarkMode] = useState(darkModeQuery?.matches);\r\n  useEffect(() => {\r\n    const darkModeHandler = ({ matches }: MediaQueryListEvent): void =>\r\n      setIsDarkMode(matches);\r\n    darkModeQuery?.addListener(darkModeHandler);\r\n    return () => darkModeQuery.removeEventListener('change', darkModeHandler);\r\n  }, [darkModeQuery]);\r\n\r\n  return isDarkMode;\r\n};\r\n\r\nexport default useDarkMode;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const getTheme = (isDarkMode = false) => {\r\n  /* brand foundation */\r\n  const hue = '200';\r\n  const saturation = '100%';\r\n  const lightness = '50%';\r\n\r\n  /* light */\r\n  const light = {\r\n    brand: `hsl(${hue} ${saturation} ${lightness}`,\r\n    text1: `hsl(${hue} ${saturation} 10%)`,\r\n    text2: `hsl(${hue} 30% 30%)`,\r\n    surface1: `hsl(${hue} 25% 90%)`,\r\n    surface2: `hsl(${hue} 20% 99%)`,\r\n    surface3: `hsl(${hue} 20% 92%)`,\r\n    surface4: `hsl(${hue} 20% 85%)`,\r\n    surfaceShadow: `${hue} 10% 20%`,\r\n    shadowStrength: '0.02',\r\n  };\r\n\r\n  const dark = {\r\n    brand: `hsl(${hue} calc(${saturation} / 2) calc(${lightness} / 1.5))`,\r\n    text1: `hsl(${hue} 15% 85%)`,\r\n    text2: `hsl(${hue} 5% 65%)`,\r\n    surface1: `hsl(${hue} 10% 10%)`,\r\n    surface2: `hsl(${hue} 10% 15%)`,\r\n    surface3: `hsl(${hue} 5% 20%)`,\r\n    surface4: `hsl(${hue} 5% 25%)`,\r\n    surfaceShadow: `${hue} 50% 3%`,\r\n    shadowStrength: '0.8',\r\n  };\r\n\r\n  function sizeStepUp(n: number, up = true): string {\r\n    let result = 1;\r\n    const typeScale = 1.25;\r\n    while (n >= 1) {\r\n      result = up ? result * typeScale : result / typeScale;\r\n      n--;\r\n    }\r\n    return `calc(1em * ${result})`;\r\n  }\r\n\r\n  return {\r\n    colors: isDarkMode ? dark : light,\r\n    size: {\r\n      xxxs: sizeStepUp(5, false),\r\n      xxs: sizeStepUp(4, false),\r\n      xs: sizeStepUp(3, false),\r\n      sm: sizeStepUp(2, false),\r\n      md: sizeStepUp(1),\r\n      lg: sizeStepUp(2),\r\n      xl: sizeStepUp(3),\r\n      xxl: sizeStepUp(4),\r\n      xxxl: sizeStepUp(5),\r\n    },\r\n    mediaQueries: {\r\n      below768: 'only screen and (max-width: 768px)',\r\n      below375: 'only screen and (max-width: 375px)',\r\n    },\r\n  };\r\n};\r\n\r\nconst theme = getTheme();\r\ntype ThemeType = typeof theme;\r\ndeclare module 'styled-components' {\r\n  export interface DefaultTheme extends ThemeType {}\r\n}\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  html {\r\n    font-size: 16px;\r\n    block-size: 100%;\r\n    background-color: ${({ theme }) => theme.colors.surface1};\r\n    color: ${({ theme }) => theme.colors.text1};\r\n    font-family: 'Roboto Mono', monospace, system-ui, sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n\r\n    @media ${({ theme }) => theme.mediaQueries.below768} {\r\n      font-size: 14px;\r\n    }\r\n\r\n    @media ${({ theme }) => theme.mediaQueries.below375} {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { AppContextProvider } from './AppContext';\nimport Trending from './Components/Trending';\nimport useDarkMode from './hooks/useDarkMode';\nimport { getTheme, GlobalStyles } from './styles/theme';\n\nfunction App() {\n  const isDarkMode = useDarkMode();\n  const theme = getTheme(isDarkMode);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      <AppContextProvider>\n        <Trending />\n      </AppContextProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}