{"version":3,"sources":["hooks/useDarkMode.tsx","services/appReducer.ts","utils/constants.ts","AppContext.tsx","hooks/createContext.tsx","components/Button.tsx","hooks/useClickOutside.tsx","icons/ArrowDown.tsx","icons/ArrowUp.tsx","utils/environment.ts","utils/utils.ts","types/common.ts","components/ButtonGroup.tsx","icons/ArrowLeft.tsx","icons/ArrowRight.tsx","components/MediaListItem.tsx","components/MediaScroller.tsx","components/StyledElements.tsx","services/api.ts","hooks/data/useContentByGenre.tsx","hooks/data/useGenres.tsx","hooks/useInView.tsx","sections/GenreSection.tsx","sections/ContentByGenres.tsx","hooks/data/useDiscoverMovies.tsx","sections/DiscoverMovies.tsx","hooks/data/useTrending.tsx","sections/Trending.tsx","sections/Home.tsx","components/Modal.tsx","components/ReadMore.tsx","icons/Close.tsx","components/YoutubeTrailer.tsx","hooks/data/useMovie.tsx","icons/Youtube.tsx","sections/Movie.tsx","icons/Moon.tsx","icons/MovieDB.tsx","icons/Search.tsx","icons/Sun.tsx","icons/User.tsx","sections/NavBar.tsx","hooks/data/usePerson.tsx","icons/Facebook.tsx","icons/Instagram.tsx","icons/Twitter.tsx","sections/Person.tsx","hooks/data/useTv.tsx","sections/Tv.tsx","styles/theme.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useDarkMode","darkModeQuery","window","matchMedia","useState","matches","isDarkMode","setIsDarkMode","useEffect","darkModeHandler","addListener","removeEventListener","appReducer","state","action","initialState","movies","upcoming","popular","trending","genres","tv","queryKeys","ImageSize","poster","backdrop","profile","ctx","React","undefined","c","Error","Provider","createContext","appContext","AppProvider","AppContextProvider","children","useReducer","dispatch","value","StyledButton","styled","button","theme","primary","colors","surface1","text1","props","size","xs","xxxs","md","Button","forwardRef","ref","onClick","disabled","rest","useClickOutside","callback","listener","event","el","current","contains","target","document","addEventListener","ArrowDown","xmlns","className","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","ArrowUp","environment","apiKey","process","baseURL","imageBaseURL","getUrl","path","queryString","getImageSrc","type","img","src","srcset","paths","filter","map","substring","join","getBackgroundImageSrc","getImageHeightAndWidth","ratio","split","i","widthRatio","heightRatio","height","width","getReleaseDate","release_date","Date","toLocaleDateString","year","month","day","calculate_age","dob","diff_ms","now","getTime","age_dt","Math","abs","getUTCFullYear","minuteToTime","duration","hours","rhours","floor","minutes","rminutes","round","updateCacheData","data","oldData","allData","uniqueIds","Array","from","Set","a","id","result","forEach","movie","find","m","push","getTVsFromApiResult","results","name","first_air_date","title","debounce","fn","timeout","time","args","clearTimeout","setTimeout","MediaType","MovieType","isSelected","text2","surface4","IconButton","isHidden","ButtonWrapper","div","lg","DropDown","surface3","DropDownContainer","ButtonGroup","items","containerRef","useRef","iconRef","dropDownRef","buttonRefs","hiddenItems","setHiddenItems","open","setOpen","handleDropDown","onWindowResize","useCallback","container","containerWidth","offsetWidth","occupiedWidth","lastVisible","element","index","elem","style","getComputedStyle","parseInt","marginLeft","marginRight","getWidthAndHorizontalMargins","setAttribute","left","offsetLeft","clientWidth","debouncedFunc","item","label","length","e","ArrowLeft","ArrowRight","Figure","figure","Image","inlineSize","blockSize","aspectRatio","surface2","Figcaption","figcaption","sm","MediaListItem","mediaType","to","image","alt","loading","srcSet","caption","Div","Arrow","span","bsize","MediaScrollerUL","ul","xl","MediaItem","li","MediaScroller","list","Movie","mediaList","createElement","isHiddenLeftArrow","setIsHiddenLeftArrow","isHiddenRightArrow","setIsHiddenRightArrow","scrollToRight","scrollLeft","scrollTo","top","behavior","scrollToLeft","handleScroll","scrollWidth","fill","onScroll","Header","header","ButtonContainer","MediaScreenContainer","ImageContainer","xxl","getColorWithOpacity","mediaQueries","below768","showPointer","MediaDescription","SectionWithBGColor","section","MediaGridSection","gridItemSize","TrailerButton","fetcher","url","fetch","response","json","useContentByGenre","genreId","enabled","useQuery","select","onSuccess","queryClient","setQueryData","useGenres","urls","Promise","all","multiFetcher","tvGenres","movieGenres","useInView","triggerOnce","threshold","root","rootMargin","inView","setInView","node","IntersectionObserver","observer","entries","entry","isIntersecting","disconnect","observe","Section","isBackdrop","GenreSection","genre","selectedMedia","setSelectedMedia","isLoading","mediaScrollerList","poster_path","backdrop_path","Tv","ContentByGenres","tvGenresId","commonGenres","includes","selectedButtonId","setSelectedButtonId","buttonListItems","useMemo","buttonId","currentTarget","dataset","genreData","genreDataIsLoading","useDiscoverMovies","Upcoming","DiscoverMovies","Popular","movieType","setMovieType","handleButton","useTrending","Trending","Home","Backdrop","ModalDiv","xxxl","Modal","onClose","escFunction","key","click","stopPropagation","Span","ReadMore","text","maxCharCount","isTruncated","setIsTruncated","resultString","slice","padEnd","Close","Iframe","iframe","IframeHeader","YoutubeTrailer","youtubeKey","frameBorder","allowFullScreen","useMovie","initialData","queryData","getQueryData","staleTime","credits","cast","Svg","svg","Youtube","role","movieId","useParams","isFetching","imageSrc","bgImageSrc","actors","recommendations","actorsList","profile_path","character","recommendationsList","recommendationGridItemWidth","isModalOpen","setIsModalOpen","toggleIsModalOpen","trailer","videos","toString","getFullYear","runtime","tagline","status","overview","Person","Moon","MovieDB","Search","Sun","User","Nav","nav","xxs","NavBar","toggleDarkMode","console","log","usePerson","Facebook","Instagram","Twitter","personId","combined_credits","media_type","tvs","birthday","place_of_birth","external_ids","twitter_id","href","rel","instagram_id","facebook_id","biography","useTv","tvId","getTheme","hue","saturation","lightness","light","brand","dark","sizeStepUp","n","up","typeScale","below1400","below375","color","opacity","match","Number","GlobalStyles","createGlobalStyle","QueryClient","defaultOptions","queries","refetchOnWindowFocus","Infinity","App","highlightColor","client","basepath","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.be5b1eb0.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst useDarkMode = (): [\r\n  boolean,\r\n  React.Dispatch<React.SetStateAction<boolean>>\r\n] => {\r\n  const darkModeQuery = window?.matchMedia(\"(prefers-color-scheme: dark)\");\r\n  const [isDarkMode, setIsDarkMode] = useState(darkModeQuery?.matches);\r\n  useEffect(() => {\r\n    const darkModeHandler = ({ matches }: MediaQueryListEvent): void =>\r\n      setIsDarkMode(matches);\r\n    darkModeQuery?.addListener(darkModeHandler);\r\n    return () => darkModeQuery.removeEventListener(\"change\", darkModeHandler);\r\n  }, [darkModeQuery]);\r\n\r\n  return [isDarkMode, setIsDarkMode];\r\n};\r\n\r\nexport default useDarkMode;\r\n","import { State } from '../types/common';\r\n\r\nexport default function appReducer(state: State, action: any): State {\r\n  return state;\r\n}\r\n","import { State } from \"../types/common\";\r\n\r\nexport const initialState: State = {\r\n  movies: {\r\n    upcoming: [],\r\n    popular: [],\r\n    trending: [],\r\n    genres: [],\r\n  },\r\n  tv: {\r\n    trending: [],\r\n    genres: [],\r\n  },\r\n};\r\n\r\nexport const queryKeys = {\r\n  movies: \"all-movies\",\r\n  tvs: \"all-tvs\",\r\n  persons: \"all-persons\",\r\n};\r\n\r\nexport const ImageSize = {\r\n  poster: [\"w92\", \"w154\", \"w185\", \"w342\", \"w500\", \"w780\", \"original\"],\r\n  backdrop: [\"w300\", \"w780\", \"w1280\", \"original\"],\r\n  profile: [\"w45\", \"w185\", \"original\"],\r\n};\r\n","import { useReducer } from \"react\";\r\nimport createContext from \"./hooks/createContext\";\r\nimport useDarkMode from \"./hooks/useDarkMode\";\r\nimport appReducer from \"./services/appReducer\";\r\nimport { AppContext } from \"./types/common\";\r\nimport { initialState } from \"./utils/constants\";\r\n\r\nconst [appContext, AppProvider] = createContext<AppContext>();\r\n\r\nexport const AppContextProvider = ({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) => {\r\n  const [state, dispatch] = useReducer(appReducer, initialState);\r\n  const [isDarkMode, setIsDarkMode] = useDarkMode();\r\n\r\n  return (\r\n    <AppProvider value={{ ...state, dispatch, isDarkMode, setIsDarkMode }}>\r\n      {children}\r\n    </AppProvider>\r\n  );\r\n};\r\n\r\nexport { appContext };\r\n","import * as React from 'react';\r\n\r\nexport default function createContext<A extends {} | null>() {\r\n  const ctx = React.createContext<A | undefined>(undefined);\r\n\r\n  const useContext = () => {\r\n    const c = React.useContext(ctx);\r\n    if (c === undefined)\r\n      throw new Error('useContext must be inside a Provider with a value');\r\n    return c;\r\n  };\r\n  return [useContext, ctx.Provider] as const;\r\n}\r\n","import React from 'react';\nimport styled from 'styled-components';\n\ntype StyledButtonProps = { primary: boolean };\nconst StyledButton = styled.button<StyledButtonProps>`\n  min-width: max-content;\n  height: min-content;\n  color: ${({ theme, primary }) => {\n    if (primary) {\n      return theme.colors.surface1;\n    }\n    return theme.colors.text1;\n  }};\n\n  border-radius: ${(props) => props.theme.size.xs};\n  border: 1px solid ${({ theme }) => theme.colors.text1};\n  font-weight: 600;\n\n  background-color: ${({ theme, primary }) => {\n    if (primary) {\n      return theme.colors.text1;\n    }\n    return 'inherit';\n  }};\n\n  text-transform: capitalize;\n  cursor: pointer;\n\n  padding-block: ${(props) => props.theme.size.xxxs};\n  padding-inline: ${(props) => props.theme.size.md};\n`;\n\ntype ButtonOwnProps = {\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n  children: React.ReactNode;\n  primary?: boolean;\n};\n\ntype ButtonProps = ButtonOwnProps &\n  React.ButtonHTMLAttributes<HTMLButtonElement>;\n\nconst Button = React.forwardRef(\n  (\n    {\n      primary = true,\n      onClick,\n      children,\n      disabled = false,\n      ...rest\n    }: ButtonProps,\n    ref: React.Ref<HTMLButtonElement>\n  ) => {\n    return (\n      <StyledButton\n        ref={ref}\n        primary={primary}\n        onClick={onClick}\n        disabled={disabled}\n        {...rest}\n      >\n        {children}\n      </StyledButton>\n    );\n  }\n);\n\nexport default Button;\n","import { RefObject, useEffect } from 'react';\r\n\r\ntype AnyEvent = MouseEvent | TouchEvent;\r\nfunction useClickOutside<T extends HTMLElement = HTMLElement>(\r\n  ref: RefObject<T>,\r\n  callback: (event: AnyEvent) => void\r\n) {\r\n  useEffect(() => {\r\n    const listener = (event: AnyEvent) => {\r\n      const el = ref?.current;\r\n\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!el || el.contains(event.target as Node)) {\r\n        return;\r\n      }\r\n\r\n      callback(event);\r\n    };\r\n\r\n    document.addEventListener(`mousedown`, listener);\r\n    document.addEventListener(`touchstart`, listener);\r\n\r\n    return () => {\r\n      document.removeEventListener(`mousedown`, listener);\r\n      document.removeEventListener(`touchstart`, listener);\r\n    };\r\n\r\n    // Reload only if ref or handler changes\r\n  }, [ref, callback]);\r\n}\r\n\r\nexport default useClickOutside;\r\n","const ArrowDown = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className=\"h-6 w-6\"\r\n    viewBox=\"0 0 24 24\"\r\n    stroke=\"currentColor\"\r\n  >\r\n    <path\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      strokeWidth={5}\r\n      d=\"M19 9l-7 7-7-7\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default ArrowDown;\r\n","const ArrowUp = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className=\"h-6 w-6\"\r\n    viewBox=\"0 0 24 24\"\r\n    stroke=\"currentColor\"\r\n  >\r\n    <path\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      strokeWidth={5}\r\n      d=\"M5 15l7-7 7 7\"\r\n    />\r\n  </svg>\r\n);\r\nexport default ArrowUp;\r\n","const environment = {\r\n  apiKey: process.env.REACT_APP_MOVIEDB_KEY,\r\n  baseURL: process.env.REACT_APP_BASEURL,\r\n  imageBaseURL: process.env.REACT_APP_IMG_BASEURL,\r\n};\r\nexport default environment;\r\n","import { ImageRatio, ImageType, Media } from \"../types/common\";\r\nimport { TVResult } from \"../types/Tv\";\r\nimport { ImageSize } from \"./constants\";\r\nimport environment from \"./environment\";\r\n\r\nconst { apiKey, baseURL, imageBaseURL } = environment;\r\n\r\nexport const getUrl = (path: string, queryString = \"\"): string =>\r\n  `${baseURL}${path}?api_key=${apiKey}${queryString}`;\r\n\r\nexport function getImageSrc(path: string | undefined | null, type: ImageType) {\r\n  const img = { src: \"\", srcset: \"\" };\r\n  if (path) {\r\n    img.src = `${imageBaseURL}original${path}`;\r\n    const sizes = ImageSize[type].filter((size) => size !== \"original\");\r\n    const paths = sizes.map(\r\n      (size) => `${imageBaseURL}${size}${path} ${size.substring(1)}w`\r\n    );\r\n    img.srcset = paths.join(\", \");\r\n  }\r\n  return img;\r\n}\r\n\r\nexport const getBackgroundImageSrc = (path: string) =>\r\n  `${imageBaseURL}w1920_and_h800_face${path}`;\r\n\r\nexport const getImageHeightAndWidth = (\r\n  ratio: ImageRatio = \"1/1\",\r\n  size: number = 10\r\n) => {\r\n  const [widthRatio, heightRatio] = ratio.split(\"/\").map((i) => +i);\r\n\r\n  const height =\r\n    widthRatio > heightRatio\r\n      ? `${size}rem`\r\n      : `${(size * heightRatio) / widthRatio}rem`;\r\n\r\n  const width =\r\n    widthRatio > heightRatio\r\n      ? `${(size * widthRatio) / heightRatio}rem`\r\n      : `${size}rem`;\r\n\r\n  return [height, width];\r\n};\r\n\r\nexport const getReleaseDate = (release_date: string) =>\r\n  new Date(release_date).toLocaleDateString(\"en-us\", {\r\n    year: \"numeric\",\r\n    month: \"short\",\r\n    day: \"numeric\",\r\n  });\r\n\r\nexport function calculate_age(dob: string) {\r\n  var diff_ms = Date.now() - new Date(dob).getTime();\r\n  var age_dt = new Date(diff_ms);\r\n\r\n  return Math.abs(age_dt.getUTCFullYear() - 1970);\r\n}\r\n\r\nexport function minuteToTime(duration: number) {\r\n  const hours = duration / 60;\r\n  const rhours = Math.floor(hours);\r\n  var minutes = (hours - rhours) * 60;\r\n  var rminutes = Math.round(minutes);\r\n  return `${rhours}h ${rminutes}m`;\r\n}\r\n\r\nexport function updateCacheData<T extends { id: number }>(data: T[]) {\r\n  return (oldData: T[] = []) => {\r\n    const allData = [...oldData, ...data];\r\n    const uniqueIds = Array.from(new Set(allData.map((a) => a.id)));\r\n    const result: T[] = [];\r\n    uniqueIds.forEach((id) => {\r\n      const movie = allData.find((m) => m.id === id);\r\n      if (movie) result.push(movie);\r\n    });\r\n    return result;\r\n  };\r\n}\r\n\r\nexport const getTVsFromApiResult = (results: TVResult[]): Media[] => {\r\n  const tvs = results.map(({ name, first_air_date, ...rest }) => ({\r\n    title: name,\r\n    release_date: first_air_date,\r\n    ...rest,\r\n  }));\r\n  return tvs;\r\n};\r\n\r\nexport function debounce<T extends Function>(fn: T, time = 50) {\r\n  let timeout: NodeJS.Timeout;\r\n  return function (...args: any[]) {\r\n    if (timeout) {\r\n      clearTimeout(timeout);\r\n    }\r\n    timeout = setTimeout(() => {\r\n      fn(...args);\r\n      clearTimeout(timeout);\r\n    }, time);\r\n  };\r\n}\r\n\r\nexport const isTouchScreen = () => \"ontouchstart\" in window;\r\n","import { ImageSize } from \"../utils/constants\";\r\n\r\nexport type ImageType = keyof typeof ImageSize;\r\n\r\nexport type ImageRatio = \"2/3\" | \"1/1\" | \"16/9\";\r\n\r\nexport type Media = {\r\n  title: string;\r\n  id: number;\r\n  backdrop_path: string;\r\n  poster_path: string;\r\n  vote_average: number;\r\n  release_date: string;\r\n};\r\n\r\nexport enum MediaType {\r\n  Movie = \"movie\",\r\n  Tv = \"tv\",\r\n  Person = \"person\",\r\n}\r\n\r\nexport enum MovieType {\r\n  Popular = \"popular\",\r\n  Upcoming = \"upcoming\",\r\n}\r\n\r\nexport type Genre = {\r\n  id: number;\r\n  name: string;\r\n};\r\n\r\nexport type Genres = Genre[];\r\n\r\nexport type State = {};\r\n\r\nexport interface AppContext extends State {\r\n  dispatch: React.Dispatch<any>;\r\n  isDarkMode: boolean;\r\n  setIsDarkMode: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nexport interface Credits {\r\n  cast: Cast[];\r\n  crew: Cast[];\r\n}\r\n\r\ninterface Cast {\r\n  adult: boolean;\r\n  gender: number;\r\n  id: number;\r\n  known_for_department: string;\r\n  name: string;\r\n  original_name: string;\r\n  popularity: number;\r\n  profile_path: null | string;\r\n  cast_id?: number;\r\n  character?: string;\r\n  credit_id: string;\r\n  order?: number;\r\n  department?: string;\r\n  job?: string;\r\n}\r\n\r\nexport type OriginalLanguage = {\r\n  [key: string]: string;\r\n};\r\n\r\nexport type OriginCountry = {\r\n  [key: string]: string;\r\n};\r\n\r\nexport interface ProductionCountry {\r\n  iso_3166_1: string;\r\n  name: string;\r\n}\r\n\r\nexport interface SpokenLanguage {\r\n  english_name: string;\r\n  iso_639_1: string;\r\n  name: string;\r\n}\r\n\r\nexport interface Videos {\r\n  results: VideosResult[];\r\n}\r\n\r\ninterface VideosResult {\r\n  iso_639_1: OriginalLanguage;\r\n  iso_3166_1: string;\r\n  name: string;\r\n  key: string;\r\n  site: string;\r\n  size: number;\r\n  type: string;\r\n  official: boolean;\r\n  published_at: string;\r\n  id: string;\r\n}\r\n","import { useCallback, useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport useClickOutside from \"../hooks/useClickOutside\";\nimport ArrowDown from \"../icons/ArrowDown\";\nimport ArrowUp from \"../icons/ArrowUp\";\nimport { debounce } from \"../utils/utils\";\nimport Button from \"./Button\";\n\nconst StyledButton = styled(Button)<{ isSelected: boolean }>`\n  background-color: inherit;\n  border: none;\n  border-radius: unset;\n  color: ${({ isSelected, theme: { colors } }) =>\n    isSelected ? colors.text1 : colors.text2};\n  font-weight: ${({ isSelected }) => (isSelected ? 600 : 400)};\n\n  &:hover {\n    background-color: ${({ theme: { colors } }) => colors.surface4};\n  }\n\n  &[aria-hidden=\"true\"] {\n    visibility: hidden;\n  }\n`;\n\nconst IconButton = styled(Button)<{ isHidden: boolean }>`\n  border: none;\n  position: absolute;\n  background-color: inherit;\n  z-index: 1;\n  color: ${({ theme: { colors } }) => colors.text1};\n  visibility: ${(props) => (props.isHidden ? \"hidden\" : \"initial\")};\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  overflow-x: hidden;\n  border-bottom: 1px solid ${(props) => props.theme.colors.surface4};\n  margin-inline: ${(props) => props.theme.size.lg};\n  margin-block-end: ${(props) => props.theme.size.md};\n  padding-block: ${(props) => props.theme.size.xxxs};\n\n  & > button > svg {\n    width: 2ch;\n  }\n`;\n\nconst DropDown = styled.div`\n  background-color: ${(props) => props.theme.colors.surface3};\n  width: max-content;\n\n  position: absolute;\n  transform: translate(-60%, -20px);\n  z-index: 1;\n  display: flex;\n  flex-direction: column;\n\n  max-block-size: 200px;\n  overflow-y: scroll;\n  scrollbar-width: none;\n\n  &::-webkit-scrollbar {\n    width: 0;\n    height: 0;\n  }\n\n  & > button {\n    width: 100%;\n    padding-block: ${(props) => props.theme.size.xs};\n    text-align: left;\n  }\n`;\n\nconst DropDownContainer = styled.div`\n  position: relative;\n  width: max-content;\n`;\n\nconst getWidthAndHorizontalMargins = (elem: HTMLElement) => {\n  const style = window.getComputedStyle(elem);\n  return (\n    elem.offsetWidth +\n    parseInt(style.marginLeft, 10) +\n    parseInt(style.marginRight, 10)\n  );\n};\ntype Item = {\n  id: number;\n  label: string;\n  isSelected: boolean;\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n};\ntype ButtonGroupProps = {\n  items: Item[];\n};\nconst ButtonGroup = ({ items }: ButtonGroupProps) => {\n  const containerRef = useRef<HTMLDivElement | null>(null);\n  const iconRef = useRef<HTMLButtonElement | null>(null);\n  const dropDownRef = useRef<HTMLDivElement | null>(null);\n  const buttonRefs = useRef<(HTMLButtonElement | null)[]>([]);\n  const [hiddenItems, setHiddenItems] = useState<Item[]>([]);\n\n  const [open, setOpen] = useState(false);\n\n  const handleDropDown = () => setOpen(!open);\n\n  const onWindowResize = useCallback(() => {\n    // width of the container and icon\n    const container = containerRef.current;\n    if (container) {\n      const containerWidth = container.offsetWidth;\n      let occupiedWidth = iconRef.current?.offsetWidth || 0;\n\n      let lastVisible = buttonRefs.current[0];\n\n      let hiddenItems: Item[] = [];\n      buttonRefs.current.forEach((element, index) => {\n        if (element) {\n          const width = getWidthAndHorizontalMargins(element);\n          if (occupiedWidth + width <= containerWidth) {\n            element.setAttribute(\"aria-hidden\", \"false\");\n            lastVisible = element;\n          } else {\n            element.setAttribute(\"aria-hidden\", \"true\");\n            hiddenItems.push(items[index]);\n          }\n          occupiedWidth += width;\n        }\n      });\n\n      setHiddenItems(hiddenItems);\n      // based on last visible button set iconButton position\n      if (lastVisible && iconRef.current && dropDownRef.current) {\n        iconRef.current.style.left = `${\n          lastVisible.offsetLeft + lastVisible.clientWidth\n        }px`;\n        dropDownRef.current.style.left = `${iconRef.current.offsetLeft}px`;\n      }\n    }\n  }, [items]);\n\n  useEffect(() => {\n    onWindowResize();\n    const debouncedFunc = debounce(onWindowResize, 100);\n    window.addEventListener(\"resize\", debouncedFunc);\n    return () => {\n      window.removeEventListener(\"resize\", debouncedFunc);\n    };\n  }, [items, onWindowResize]);\n\n  useClickOutside(dropDownRef, () => open && handleDropDown());\n\n  return (\n    <>\n      <ButtonWrapper ref={containerRef}>\n        {items.map((item, i) => (\n          <StyledButton\n            key={item.id}\n            data-button-id={item.id}\n            onClick={item.onClick}\n            isSelected={item.isSelected}\n            ref={(ref) => (buttonRefs.current[i] = ref)}\n          >\n            {item.label}\n          </StyledButton>\n        ))}\n        <IconButton\n          onClick={handleDropDown}\n          ref={iconRef}\n          aria-label=\"Expand Genres\"\n          isHidden={hiddenItems.length === 0}\n        >\n          {open ? <ArrowUp /> : <ArrowDown />}\n        </IconButton>\n      </ButtonWrapper>\n\n      <DropDownContainer ref={dropDownRef}>\n        {open && (\n          <DropDown>\n            {hiddenItems.map((item) => (\n              <StyledButton\n                key={item.id}\n                onClick={(e) => item.onClick(e)}\n                data-button-id={item.id}\n                isSelected={item.isSelected}\n              >\n                {item.label}\n              </StyledButton>\n            ))}\n          </DropDown>\n        )}\n      </DropDownContainer>\n    </>\n  );\n};\n\nexport default ButtonGroup;\n","const ArrowLeft = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className=\"h-6 w-6\"\r\n    viewBox=\"0 0 24 24\"\r\n    stroke=\"currentColor\"\r\n  >\r\n    <path\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      strokeWidth={5}\r\n      d=\"M15 19l-7-7 7-7\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default ArrowLeft;\r\n","const ArrowRight = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className=\"h-6 w-6\"\r\n    viewBox=\"0 0 24 24\"\r\n    stroke=\"currentColor\"\r\n  >\r\n    <path\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      strokeWidth={5}\r\n      d=\"M9 5l7 7-7 7\"\r\n    />\r\n  </svg>\r\n);\r\nexport default ArrowRight;\r\n","import { Link } from \"@reach/router\";\nimport { ImageRatio, MediaType } from \"../types/common\";\nimport { getImageHeightAndWidth } from \"../utils/utils\";\nimport Skeleton from \"react-loading-skeleton\";\nimport styled from \"styled-components\";\n\nconst Figure = styled.figure`\n  scroll-snap-align: start;\n\n  display: grid;\n  gap: calc(${(props) => props.theme.size.lg} / 2);\n  margin: 0;\n\n  cursor: pointer;\n  user-select: none;\n\n  outline-offset: 12px;\n\n  &:focus {\n    outline-offset: 7px;\n  }\n`;\n\ntype ImageProps = {\n  aspectRatio: ImageRatio;\n  inlineSize: string;\n  blockSize: string;\n};\n\nconst Image = styled.img<ImageProps>`\n  inline-size: ${(props) => props.inlineSize};\n  block-size: ${(props) => props.blockSize};\n\n  aspect-ratio: ${(props) => props.aspectRatio};\n\n  object-fit: cover;\n\n  border-radius: 1ex;\n  border: none;\n  overflow: hidden;\n  background-image: ${(props) =>\n    `linear-gradient(to bottom, ${props.theme.colors.surface1}, ${props.theme.colors.surface2})`};\n`;\n\nconst Figcaption = styled.figcaption<{\n  inlineSize: string;\n}>`\n  line-height: ${(props) => props.theme.size.lg};\n  inline-size: ${(props) => props.inlineSize};\n  font-weight: 600;\n  font-size: ${(props) => props.theme.size.md};\n\n  & > p {\n    font-size: ${(props) => props.theme.size.sm};\n    font-weight: 400;\n    color: ${(props) => props.theme.colors.text2};\n    padding-block: ${(props) => props.theme.size.sm};\n  }\n`;\n\ntype ListItemType = {\n  id: number;\n  image: {\n    src: string;\n    srcset: string;\n  };\n  title: string;\n  caption?: string;\n};\n\ntype MediaListItemProps = {\n  item: ListItemType;\n  ratio: ImageRatio;\n  mediaType: MediaType;\n  size?: number;\n};\n\nconst MediaListItem = ({\n  item,\n  ratio,\n  mediaType,\n  size,\n}: MediaListItemProps) => {\n  const [height, width] = getImageHeightAndWidth(ratio, size);\n\n  return (\n    <div style={{ width }}>\n      <Link to={`${process.env.PUBLIC_URL}/${mediaType}/${item.id}`}>\n        <Figure>\n          <picture>\n            {item.image.src ? (\n              <Image\n                aspectRatio={ratio}\n                inlineSize={width}\n                blockSize={height}\n                alt={item.title}\n                loading=\"lazy\"\n                srcSet={item.image.srcset}\n                src={item.image.src}\n              />\n            ) : (\n              <Skeleton width={width} height={height} />\n            )}\n          </picture>\n          <Figcaption inlineSize={width}>\n            {item.title || (\n              <>\n                <Skeleton />\n                <Skeleton width=\"65%\" />\n              </>\n            )}\n            {item.caption && <p>{item.caption}</p>}\n          </Figcaption>\n        </Figure>\n      </Link>\n    </div>\n  );\n};\n\nexport default MediaListItem;\n","import { useCallback, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport ArrowLeft from \"../icons/ArrowLeft\";\nimport ArrowRight from \"../icons/ArrowRight\";\nimport { ImageRatio, MediaType } from \"../types/common\";\nimport {\n  debounce,\n  getImageHeightAndWidth,\n  isTouchScreen,\n} from \"../utils/utils\";\nimport MediaListItem from \"./MediaListItem\";\n\nconst Div = styled.div`\n  position: relative;\n`;\n\nconst Arrow = styled.span<{ bsize: string; isHidden: boolean }>`\n  color: white;\n  background: rgba(20, 20, 20, 0.5);\n\n  cursor: pointer;\n  font-size: 6em;\n\n  position: absolute;\n  top: ${(props) => props.theme.size.xs};\n  height: ${(props) => props.bsize};\n  width: 4%;\n\n  text-align: center;\n  display: none;\n  justify-content: center;\n  align-items: center;\n\n  visibility: ${(props) => (props.isHidden ? \"hidden\" : \"visible\")};\n\n  &:nth-of-type(1) {\n    left: 0;\n  }\n\n  &:nth-of-type(2) {\n    right: 0;\n  }\n  ${Div}:hover & {\n    display: inline-flex;\n  }\n`;\n\nconst MediaScrollerUL = styled.ul`\n  display: grid;\n  grid-auto-flow: column;\n  gap: ${(props) => props.theme.size.xl};\n\n  padding-inline: ${(props) => props.theme.size.lg};\n  padding-block: ${(props) => props.theme.size.xs};\n\n  overflow-x: auto;\n  overscroll-behavior-inline: contain;\n  scroll-snap-type: inline mandatory;\n  scroll-padding-left: ${(props) => props.theme.size.xl};\n  scroll-padding-right: ${(props) => props.theme.size.xl};\n  scroll-padding-inline: ${(props) => props.theme.size.xl};\n\n  scrollbar-width: none;\n\n  &::-webkit-scrollbar {\n    width: 0;\n    height: 0;\n  }\n\n  @media (prefers-reduced-motion: no-preference) {\n    & {\n      scroll-behavior: smooth;\n    }\n  }\n`;\n\ntype MediaItemProps = {\n  inlineSize: string;\n};\n\nconst MediaItem = styled.li<MediaItemProps>`\n  display: inline-block;\n  inline-size: ${(props) => props.inlineSize};\n  block-size: min-content;\n`;\n\ntype ListItemType = {\n  id: number;\n  image: {\n    src: string;\n    srcset: string;\n  };\n  title: string;\n  caption?: string;\n};\n\ntype MediaScrollerProps = {\n  list: ListItemType[];\n  ratio?: ImageRatio;\n  loading?: boolean;\n  mediaType?: MediaType;\n};\n\nconst MediaScroller = ({\n  list,\n  ratio = \"1/1\",\n  loading = false,\n  mediaType = MediaType.Movie,\n}: MediaScrollerProps) => {\n  const [height, width] = getImageHeightAndWidth(ratio);\n  const mediaList = useRef<HTMLUListElement>(document.createElement(\"ul\"));\n  const [isHiddenLeftArrow, setIsHiddenLeftArrow] = useState(true);\n  const [isHiddenRightArrow, setIsHiddenRightArrow] = useState(false);\n\n  const scrollToRight = useCallback(() => {\n    const { offsetWidth, scrollLeft } = mediaList.current;\n    mediaList.current.scrollTo({\n      top: 0,\n      left: scrollLeft + offsetWidth,\n      behavior: \"smooth\",\n    });\n  }, []);\n\n  const scrollToLeft = useCallback(() => {\n    const { offsetWidth, scrollLeft } = mediaList.current;\n    mediaList.current.scrollTo({\n      top: 0,\n      left: scrollLeft - offsetWidth,\n      behavior: \"smooth\",\n    });\n  }, []);\n\n  const handleScroll = useCallback(() => {\n    if (!mediaList.current) return;\n    const { offsetWidth, scrollLeft, scrollWidth } = mediaList.current;\n\n    if (offsetWidth + scrollLeft >= scrollWidth) {\n      setIsHiddenRightArrow(true);\n    } else if (isHiddenRightArrow) {\n      setIsHiddenRightArrow(false);\n    }\n\n    if (scrollLeft === 0) {\n      setIsHiddenLeftArrow(true);\n    } else if (isHiddenLeftArrow) {\n      setIsHiddenLeftArrow(false);\n    }\n  }, [isHiddenLeftArrow, isHiddenRightArrow]);\n\n  const data = loading\n    ? (Array(10).fill({ image: {} }) as ListItemType[])\n    : list;\n\n  return (\n    <Div>\n      {!loading && !isTouchScreen() && (\n        <>\n          <Arrow\n            bsize={height}\n            onClick={scrollToLeft}\n            isHidden={isHiddenLeftArrow}\n          >\n            <ArrowLeft />\n          </Arrow>\n          <Arrow\n            bsize={height}\n            onClick={scrollToRight}\n            isHidden={isHiddenRightArrow}\n          >\n            <ArrowRight />\n          </Arrow>\n        </>\n      )}\n      <MediaScrollerUL ref={mediaList} onScroll={debounce(handleScroll)}>\n        {data.map((item, index) => (\n          <MediaItem inlineSize={width} key={`${item.id}-${index}`}>\n            <MediaListItem item={item} ratio={ratio} mediaType={mediaType} />\n          </MediaItem>\n        ))}\n      </MediaScrollerUL>\n    </Div>\n  );\n};\n\nexport default MediaScroller;\n","import styled from \"styled-components\";\nimport { ImageRatio } from \"../types/common\";\nimport Button from \"./Button\";\n\nexport const Header = styled.header`\n  display: grid;\n  grid-auto-flow: column;\n  align-items: center;\n  justify-content: start;\n  padding-inline: ${(props) => props.theme.size.lg};\n  padding-block: ${(props) => props.theme.size.xs};\n  grid-gap: ${(props) => props.theme.size.xs};\n\n  & h1 {\n    font-size: ${(props) => props.theme.size.xl};\n  }\n`;\n\nexport const ButtonContainer = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  width: min-content;\n  border-radius: ${(props) => props.theme.size.md};\n  border: 1px solid ${({ theme }) => theme.colors.text1};\n\n  & > button {\n    border: none;\n    border-radius: inherit;\n  }\n`;\n\nexport const MediaScreenContainer = styled.div`\n  background-image: linear-gradient(\n    to right,\n    ${(props) => props.theme.colors.surface2},\n    ${(props) => props.theme.colors.surface4}\n  );\n`;\n\nexport const ImageContainer = styled.div<{\n  img?: string;\n}>`\n  display: flex;\n  justify-content: center;\n  gap: ${(props) => props.theme.size.lg};\n  padding-block: ${(props) => props.theme.size.xxl};\n  padding-inline: calc(${(props) => props.theme.size.xxl} * 4);\n  background-image: linear-gradient(\n      to right,\n      ${(props) => props.theme.getColorWithOpacity(\"surface1\", 0.95)},\n      ${(props) => props.theme.getColorWithOpacity(\"surface2\", 0.9)}\n    ),\n    url(${(props) => props.img});\n\n  background-size: cover;\n  background-position: center;\n  border-radius: 1ex;\n\n  @media ${({ theme }) => theme.mediaQueries.below768} {\n    flex-direction: column;\n    align-items: center;\n    flex-wrap: wrap;\n    padding-inline: ${(props) => props.theme.size.xxl};\n  }\n`;\n\nexport const Figure = styled.figure`\n  background-color: ${(props) => props.theme.colors.surface2};\n  border-radius: 1ex;\n  height: 100%;\n\n  & > figcaption {\n    line-height: ${(props) => props.theme.size.lg};\n    padding-block-end: ${(props) => props.theme.size.xs};\n    text-align: center;\n    padding-top: 0;\n    width: 100%;\n    font-weight: 600;\n    font-size: ${(props) => props.theme.size.md};\n  }\n`;\n\ntype ImageProps = {\n  aspectRatio: ImageRatio;\n  inlineSize: string;\n  blockSize: string;\n  showPointer?: boolean;\n};\n\nexport const Image = styled.img<ImageProps>`\n  inline-size: ${(props) => props.inlineSize};\n  block-size: ${(props) => props.blockSize};\n\n  aspect-ratio: ${(props) => props.aspectRatio};\n  cursor: ${(props) => (props.showPointer ? \"pointer\" : \"initial\")};\n  object-fit: cover;\n\n  border-top-right-radius: 1ex;\n  border-top-left-radius: 1ex;\n\n  border: none;\n  overflow: hidden;\n  background-image: ${(props) =>\n    `linear-gradient(to bottom, ${props.theme.colors.surface1}, ${props.theme.colors.surface2})`};\n`;\n\nexport const MediaDescription = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: ${(props) => props.theme.size.xl};\n\n  .mediaHeading > h1 {\n    font-size: ${(props) => props.theme.size.xxl};\n    line-height: ${(props) => props.theme.size.xxl};\n\n    font-weight: 600;\n    & > span {\n      font-weight: 400;\n    }\n  }\n  .mediaFacts {\n    display: flex;\n    line-height: ${(props) => props.theme.size.xxl};\n\n    gap: ${(props) => props.theme.size.xxl};\n    & > span {\n      white-space: nowrap;\n    }\n  }\n  .mediaGenres,\n  .mediaSocial {\n    display: flex;\n    flex-wrap: wrap;\n    gap: ${(props) => props.theme.size.sm};\n  }\n`;\n\nexport const SectionWithBGColor = styled.section`\n  background-image: ${(props) =>\n    `linear-gradient(\n  135deg,\n  ${props.theme.colors.surface2},\n  ${props.theme.colors.surface4}\n)`};\n`;\n\nexport const MediaGridSection = styled.section<{ gridItemSize: string }>`\n  .mediaGrid {\n    display: grid;\n    grid-template-columns: repeat(\n      auto-fit,\n      minmax(${(props) => props.gridItemSize}, 1fr)\n    );\n    gap: ${(props) => props.theme.size.xl};\n\n    padding-inline: ${(props) => props.theme.size.lg};\n    padding-block: ${(props) => props.theme.size.xs};\n\n    & > div {\n      justify-self: center;\n    }\n  }\n`;\n\nexport const TrailerButton = styled(Button)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  background: transparent;\n  color: ${(props) => props.theme.colors.text1};\n  font-size: ${(props) => props.theme.size.md};\n  border: none;\n\n  & > svg {\n    margin-inline: ${(props) => props.theme.size.xs};\n  }\n`;\n","export const fetcher = async (url: string) => {\r\n  try {\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (e) {\r\n    throw new Error('Api Error');\r\n  }\r\n};\r\n\r\nexport const multiFetcher = (...urls: string[]) =>\r\n  Promise.all(urls.map(fetcher));\r\n","import { useQuery } from \"react-query\";\r\nimport { queryClient } from \"../../App\";\r\nimport { fetcher } from \"../../services/api\";\r\nimport { Media, MediaType } from \"../../types/common\";\r\nimport { GenreMovies } from \"../../types/Movies\";\r\nimport { GenreTv } from \"../../types/Tv\";\r\nimport { queryKeys } from \"../../utils/constants\";\r\nimport {\r\n  getTVsFromApiResult,\r\n  getUrl,\r\n  updateCacheData,\r\n} from \"../../utils/utils\";\r\n\r\nfunction useContentByGenre(type: MediaType, genreId: number, enabled = false) {\r\n  return useQuery<\r\n    GenreMovies | GenreTv,\r\n    string,\r\n    Media[],\r\n    [MediaType, \"genre\", number]\r\n  >(\r\n    [type, \"genre\", genreId],\r\n    () => fetcher(getUrl(`discover/${type}`, `&with_genres=${genreId}`)),\r\n    {\r\n      select: (data) => {\r\n        return type === MediaType.Movie\r\n          ? (data as GenreMovies).results\r\n          : getTVsFromApiResult((data as GenreTv).results);\r\n      },\r\n      onSuccess: (data) => {\r\n        queryClient.setQueryData(\r\n          type === MediaType.Movie ? queryKeys.movies : queryKeys.tvs,\r\n          updateCacheData(data)\r\n        );\r\n      },\r\n      enabled,\r\n    }\r\n  );\r\n}\r\n\r\nexport default useContentByGenre;\r\n","import { useQuery } from 'react-query';\r\nimport { multiFetcher } from '../../services/api';\r\nimport { Genres } from '../../types/common';\r\nimport { getUrl } from '../../utils/utils';\r\n\r\nfunction useGenres() {\r\n  return useQuery<\r\n    { genres: Genres }[],\r\n    string,\r\n    { tvGenres: Genres; movieGenres: Genres },\r\n    'genres'\r\n  >(\r\n    'genres',\r\n    () => multiFetcher(getUrl('genre/tv/list'), getUrl('genre/movie/list')),\r\n    {\r\n      select: (data) => {\r\n        const [tv, movie] = data;\r\n        return { tvGenres: tv.genres, movieGenres: movie.genres };\r\n      },\r\n    }\r\n  );\r\n}\r\n\r\nexport default useGenres;\r\n","import { useEffect, useRef, useState } from 'react';\r\n\r\ninterface Options extends IntersectionObserverInit {\r\n  triggerOnce?: boolean;\r\n}\r\n\r\nconst useInView = ({\r\n  triggerOnce,\r\n  threshold = 0,\r\n  root = null,\r\n  rootMargin = '0%',\r\n}: Options) => {\r\n  const ref = useRef<any>(null);\r\n  const [inView, setInView] = useState(false);\r\n  useEffect(() => {\r\n    const node = ref?.current; // DOM Ref\r\n    const hasIOSupport = !!window.IntersectionObserver;\r\n\r\n    if (!hasIOSupport || !node) return;\r\n\r\n    const observer = new IntersectionObserver(\r\n      (entries, observer) => {\r\n        entries.forEach((entry) => {\r\n          setInView(entry.isIntersecting);\r\n          // after inView and triggeronce disconnect\r\n          if (entry.isIntersecting && triggerOnce) {\r\n            observer.disconnect();\r\n          }\r\n        });\r\n      },\r\n      { root, rootMargin, threshold }\r\n    );\r\n\r\n    observer.observe(node);\r\n\r\n    return () => observer.disconnect();\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return { ref, inView };\r\n};\r\n\r\nexport default useInView;\r\n","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../components/Button\";\nimport MediaScroller from \"../components/MediaScroller\";\nimport { ButtonContainer, Header } from \"../components/StyledElements\";\nimport useContentByGenre from \"../hooks/data/useContentByGenre\";\nimport useInView from \"../hooks/useInView\";\nimport { Genre, MediaType } from \"../types/common\";\nimport { getImageSrc, getReleaseDate } from \"../utils/utils\";\n\nconst Section = styled.section<{ isBackdrop: boolean }>`\n  background-image: ${(props) =>\n    props.isBackdrop\n      ? `linear-gradient(\n    135deg,\n    ${props.theme.colors.surface2},\n    ${props.theme.colors.surface4}\n  )`\n      : \"none\"};\n`;\ntype GenreSectionProps = { genre: Genre; index: number };\n\nconst GenreSection = ({ genre, index }: GenreSectionProps) => {\n  const { ref, inView } = useInView({ triggerOnce: true });\n  const [selectedMedia, setSelectedMedia] = useState<MediaType>(\n    MediaType.Movie\n  );\n  const isBackdrop = index % 2 === 0;\n\n  // conditionally fetch only if the section is in view.\n  const { data = [], isLoading } = useContentByGenre(\n    selectedMedia,\n    genre.id,\n    inView\n  );\n\n  const mediaScrollerList = data.map(\n    ({ id, title, poster_path, backdrop_path, release_date }) => ({\n      id,\n      title,\n      image: getImageSrc(\n        isBackdrop ? backdrop_path : poster_path,\n        isBackdrop ? \"backdrop\" : \"poster\"\n      ),\n      caption: getReleaseDate(release_date),\n    })\n  );\n\n  return (\n    <Section ref={ref} isBackdrop={isBackdrop}>\n      <Header>\n        <h1>{genre.name}</h1>\n        <ButtonContainer>\n          <Button\n            primary={selectedMedia === MediaType.Movie}\n            onClick={() => setSelectedMedia(MediaType.Movie)}\n          >\n            {MediaType.Movie}\n          </Button>\n          <Button\n            primary={selectedMedia === MediaType.Tv}\n            onClick={() => setSelectedMedia(MediaType.Tv)}\n          >\n            {MediaType.Tv}\n          </Button>\n        </ButtonContainer>\n      </Header>\n      <MediaScroller\n        list={mediaScrollerList}\n        ratio={isBackdrop ? \"16/9\" : \"2/3\"}\n        // if not in the view just render loading screen\n        loading={inView ? isLoading : true}\n        mediaType={selectedMedia}\n      />\n    </Section>\n  );\n};\n\nexport default GenreSection;\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport Button from \"../components/Button\";\nimport ButtonGroup from \"../components/ButtonGroup\";\nimport MediaScroller from \"../components/MediaScroller\";\nimport { ButtonContainer, Header } from \"../components/StyledElements\";\nimport useContentByGenre from \"../hooks/data/useContentByGenre\";\nimport useGenres from \"../hooks/data/useGenres\";\nimport { MediaType } from \"../types/common\";\nimport { getImageSrc, getReleaseDate } from \"../utils/utils\";\nimport GenreSection from \"./GenreSection\";\n\nconst ContentByGenres = () => {\n  const [selectedMedia, setSelectedMedia] = useState<MediaType>(\n    MediaType.Movie\n  );\n  const { data, isLoading } = useGenres();\n  const { tvGenres = [], movieGenres = [] } = data || {};\n  const tvGenresId = tvGenres.map(({ id }) => id);\n  const commonGenres = movieGenres.filter(({ id }) => tvGenresId.includes(id));\n  const genres = selectedMedia === MediaType.Movie ? movieGenres : tvGenres;\n  const [selectedButtonId, setSelectedButtonId] = useState(genres[0]?.id);\n\n  const buttonListItems = useMemo(\n    () =>\n      genres.map(({ id, name }) => ({\n        id,\n        label: name,\n        isSelected: id === selectedButtonId,\n        onClick: (e: React.MouseEvent<HTMLButtonElement>) => {\n          const { buttonId } = e.currentTarget.dataset;\n          if (buttonId) {\n            setSelectedButtonId(parseInt(buttonId));\n          }\n        },\n      })),\n    [genres, selectedButtonId]\n  );\n\n  useEffect(() => {\n    setSelectedButtonId(genres[0]?.id);\n  }, [genres]);\n\n  const { data: genreData = [], isLoading: genreDataIsLoading } =\n    useContentByGenre(selectedMedia, selectedButtonId, true);\n\n  const mediaScrollerList = genreData.map(\n    ({ id, title, poster_path, release_date }) => ({\n      id,\n      title,\n      image: getImageSrc(poster_path, \"poster\"),\n      caption: getReleaseDate(release_date),\n    })\n  );\n\n  return (\n    <>\n      {isLoading ? (\n        <MediaScroller list={[]} loading ratio={\"2/3\"} />\n      ) : (\n        <>\n          <section>\n            <Header>\n              <h1>Genres</h1>\n              <ButtonContainer>\n                <Button\n                  primary={selectedMedia === MediaType.Movie}\n                  onClick={() => setSelectedMedia(MediaType.Movie)}\n                >\n                  {MediaType.Movie}\n                </Button>\n                <Button\n                  primary={selectedMedia === MediaType.Tv}\n                  onClick={() => setSelectedMedia(MediaType.Tv)}\n                >\n                  {MediaType.Tv}\n                </Button>\n              </ButtonContainer>\n            </Header>\n            <ButtonGroup items={buttonListItems} />\n            <MediaScroller\n              list={mediaScrollerList}\n              ratio={\"2/3\"}\n              loading={genreDataIsLoading}\n              mediaType={selectedMedia}\n            />\n          </section>\n\n          {commonGenres.map((genre, index) => (\n            <GenreSection genre={genre} key={genre.id} index={index} />\n          ))}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ContentByGenres;\n","import { useQuery } from \"react-query\";\r\nimport { queryClient } from \"../../App\";\r\nimport { fetcher } from \"../../services/api\";\r\nimport { Media, MovieType } from \"../../types/common\";\r\nimport { PopularMovies, UpcomingMovies } from \"../../types/Movies\";\r\nimport { queryKeys } from \"../../utils/constants\";\r\nimport { getUrl, updateCacheData } from \"../../utils/utils\";\r\n\r\nfunction useDiscoverMovies(type: MovieType) {\r\n  return useQuery<\r\n    UpcomingMovies | PopularMovies,\r\n    string,\r\n    Media[],\r\n    [\"movie\", MovieType]\r\n  >([\"movie\", type], () => fetcher(getUrl(`movie/${type}`)), {\r\n    select: (data) => {\r\n      return type === MovieType.Upcoming\r\n        ? (data as UpcomingMovies).results\r\n        : (data as PopularMovies).results;\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.setQueryData<Media[]>(\r\n        queryKeys.movies,\r\n        updateCacheData(data)\r\n      );\r\n    },\r\n  });\r\n}\r\n\r\nexport default useDiscoverMovies;\r\n","import { useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../components/Button\";\nimport MediaScroller from \"../components/MediaScroller\";\nimport { ButtonContainer, Header } from \"../components/StyledElements\";\nimport useDiscoverMovies from \"../hooks/data/useDiscoverMovies\";\nimport { MovieType } from \"../types/common\";\nimport { getImageSrc, getReleaseDate } from \"../utils/utils\";\n\nconst Section = styled.section`\n  background-image: linear-gradient(\n    135deg,\n    ${(props) => props.theme.colors.surface2},\n    ${(props) => props.theme.colors.surface4}\n  );\n`;\n\nconst DiscoverMovies = () => {\n  const [movieType, setMovieType] = useState<MovieType>(MovieType.Popular);\n\n  const { data = [], isLoading } = useDiscoverMovies(movieType);\n\n  const mediaScrollerList = data.map(\n    ({ id, title, backdrop_path, release_date }) => ({\n      id,\n      title,\n      image: getImageSrc(backdrop_path, \"backdrop\"),\n      caption: getReleaseDate(release_date),\n    })\n  );\n\n  const handleButton = useCallback(\n    () =>\n      setMovieType(\n        movieType === MovieType.Popular ? MovieType.Upcoming : MovieType.Popular\n      ),\n    [movieType]\n  );\n\n  return (\n    <Section id=\"discover-movies\">\n      <Header>\n        <h1>Discover Movies</h1>\n        <ButtonContainer>\n          <Button\n            primary={movieType === MovieType.Popular}\n            disabled={movieType === MovieType.Popular}\n            onClick={handleButton}\n          >\n            Popular\n          </Button>\n          <Button\n            primary={movieType === MovieType.Upcoming}\n            disabled={movieType === MovieType.Upcoming}\n            onClick={handleButton}\n          >\n            Upcoming\n          </Button>\n        </ButtonContainer>\n      </Header>\n\n      <MediaScroller\n        list={mediaScrollerList}\n        loading={isLoading}\n        ratio=\"16/9\"\n      />\n    </Section>\n  );\n};\n\nexport default DiscoverMovies;\n","import { useQuery } from \"react-query\";\r\nimport { queryClient } from \"../../App\";\r\nimport { fetcher } from \"../../services/api\";\r\nimport { Media, MediaType } from \"../../types/common\";\r\nimport { TrendingMovies } from \"../../types/Movies\";\r\nimport { TrendingTv } from \"../../types/Tv\";\r\nimport { queryKeys } from \"../../utils/constants\";\r\nimport {\r\n  getTVsFromApiResult,\r\n  getUrl,\r\n  updateCacheData,\r\n} from \"../../utils/utils\";\r\n\r\nfunction useTrending(type: MediaType) {\r\n  return useQuery<\r\n    TrendingMovies | TrendingTv,\r\n    string,\r\n    Media[],\r\n    [MediaType, \"trending\"]\r\n  >([type, \"trending\"], () => fetcher(getUrl(`trending/${type}/day`)), {\r\n    select: (data) => {\r\n      return type === MediaType.Movie\r\n        ? (data as TrendingMovies).results\r\n        : getTVsFromApiResult((data as TrendingTv).results);\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.setQueryData<Media[]>(\r\n        type === MediaType.Movie ? queryKeys.movies : queryKeys.tvs,\r\n        updateCacheData(data)\r\n      );\r\n    },\r\n  });\r\n}\r\n\r\nexport default useTrending;\r\n","import { useCallback, useState } from \"react\";\nimport Button from \"../components/Button\";\nimport MediaScroller from \"../components/MediaScroller\";\nimport { ButtonContainer, Header } from \"../components/StyledElements\";\nimport useTrending from \"../hooks/data/useTrending\";\nimport { MediaType } from \"../types/common\";\nimport { getImageSrc, getReleaseDate } from \"../utils/utils\";\n\nconst Trending = () => {\n  const [selectedMedia, setSelectedMedia] = useState<MediaType>(\n    MediaType.Movie\n  );\n\n  const { data = [], isLoading } = useTrending(selectedMedia);\n\n  const mediaScrollerList = data.map(\n    ({ id, title, poster_path, release_date }) => ({\n      id,\n      title,\n      image: getImageSrc(poster_path, \"poster\"),\n      caption: getReleaseDate(release_date),\n    })\n  );\n\n  const handleButton = useCallback(\n    () =>\n      setSelectedMedia(\n        selectedMedia === MediaType.Movie ? MediaType.Tv : MediaType.Movie\n      ),\n    [selectedMedia]\n  );\n\n  return (\n    <section id=\"trending\">\n      <Header>\n        <h1>Trending</h1>\n        <ButtonContainer>\n          <Button\n            primary={selectedMedia === MediaType.Movie}\n            disabled={selectedMedia === MediaType.Movie}\n            onClick={handleButton}\n          >\n            {MediaType.Movie}\n          </Button>\n          <Button\n            primary={selectedMedia === MediaType.Tv}\n            disabled={selectedMedia === MediaType.Tv}\n            onClick={handleButton}\n          >\n            {MediaType.Tv}\n          </Button>\n        </ButtonContainer>\n      </Header>\n\n      <MediaScroller\n        list={mediaScrollerList}\n        ratio=\"2/3\"\n        loading={isLoading}\n        mediaType={selectedMedia}\n      />\n    </section>\n  );\n};\n\nexport default Trending;\n","import { RouteComponentProps } from \"@reach/router\";\nimport ContentByGenres from \"./ContentByGenres\";\nimport DiscoverMovies from \"./DiscoverMovies\";\nimport Trending from \"./Trending\";\n\nconst Home = (props: RouteComponentProps) => (\n  <>\n    <Trending />\n    <DiscoverMovies />\n    <ContentByGenres />\n  </>\n);\n\nexport default Home;\n","import { ReactNode, useCallback, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\n\nconst Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  z-index: 2;\n\n  background: ${(props) => props.theme.getColorWithOpacity(\"surface4\", 0.96)};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ModalDiv = styled.div`\n  width: clamp(50%, calc(${(props) => props.theme.size.xxxl} * 15), 90%);\n  height: min(50%);\n  border-radius: 1ex;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\ntype ModalProps = {\n  onClose: React.MouseEventHandler<HTMLDivElement>;\n  children: ReactNode;\n  open: boolean;\n};\n\nconst Modal = ({ onClose, children, open }: ModalProps) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const escFunction = useCallback((e: KeyboardEvent) => {\n    if (e.key === \"Escape\") {\n      ref?.current?.click();\n    }\n  }, []);\n  useEffect(() => {\n    document.addEventListener(\"keydown\", escFunction);\n    return () => {\n      document.removeEventListener(\"keydown\", escFunction);\n    };\n  }, [escFunction]);\n  return open ? (\n    <Backdrop onClick={onClose} ref={ref}>\n      <ModalDiv onClick={(e) => e.stopPropagation()}>{children}</ModalDiv>\n    </Backdrop>\n  ) : null;\n};\n\nexport default Modal;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst Span = styled.span`\n  font-weight: 600;\n  text-decoration: underline;\n  cursor: pointer;\n`;\n\ntype ReadMoreProps = {\n  text: string;\n  maxCharCount?: number;\n};\nconst ReadMore = ({ text = \"\", maxCharCount = 300 }: ReadMoreProps) => {\n  const [isTruncated, setIsTruncated] = useState(text.length > maxCharCount);\n\n  const resultString = isTruncated\n    ? text.slice(0, maxCharCount).padEnd(maxCharCount + 3, \".\")\n    : text;\n\n  const toggleIsTruncated = () => setIsTruncated(!isTruncated);\n\n  return (\n    <p>\n      {resultString}\n      {isTruncated ? <Span onClick={toggleIsTruncated}>Read More</Span> : null}\n    </p>\n  );\n};\n\nexport default ReadMore;\n","const Close = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"h-6 w-6\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke=\"currentColor\"\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={5}\n      d=\"M6 18L18 6M6 6l12 12\"\n    />\n  </svg>\n);\nexport default Close;\n","import styled from \"styled-components\";\nimport Close from \"../icons/Close\";\n\nconst Iframe = styled.iframe`\n  min-width: 90vw;\n  min-height: calc(90vw * (9 / 16));\n`;\n\nconst IframeHeader = styled.div`\n  width: 90vw;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  background: black;\n  padding: ${(props) => props.theme.size.sm};\n  color: white;\n\n  & > span {\n    cursor: pointer;\n  }\n\n  & > span > svg {\n    width: 3ch;\n  }\n  & > p {\n    font-weight: 600;\n  }\n`;\n\ntype YoutubeTrailerProps = {\n  name: string;\n  youtubeKey: string;\n  onClose: React.MouseEventHandler<HTMLSpanElement>;\n};\n\nconst YoutubeTrailer = ({ name, youtubeKey, onClose }: YoutubeTrailerProps) => (\n  <>\n    <IframeHeader>\n      <p>{name}</p>\n      <span onClick={onClose}>\n        <Close />\n      </span>\n    </IframeHeader>\n    <Iframe\n      title={name}\n      id=\"ytplayer\"\n      src={`https://www.youtube.com/embed/${youtubeKey}?autoplay=1`}\n      frameBorder=\"0\"\n      allowFullScreen\n    />\n  </>\n);\n\nexport default YoutubeTrailer;\n","import { useQuery } from \"react-query\";\nimport { queryClient } from \"../../App\";\nimport { fetcher } from \"../../services/api\";\nimport { Movie } from \"../../types/Movies\";\nimport { queryKeys } from \"../../utils/constants\";\nimport { getUrl, updateCacheData } from \"../../utils/utils\";\n\nfunction useMovie(id: number) {\n  return useQuery<Movie, number, Movie, [\"movie\", number]>(\n    [\"movie\", id],\n    () =>\n      fetcher(\n        getUrl(\n          `movie/${id}`,\n          \"&append_to_response=recommendations,videos,credits\"\n        )\n      ),\n    {\n      initialData: () => {\n        const queryData = queryClient.getQueryData<Movie[]>(queryKeys.movies);\n        const movie = queryData?.find((data) => data.id === id);\n        return movie;\n      },\n      staleTime: 0,\n      onSuccess: (data) => {\n        queryClient.setQueryData<Movie[\"credits\"][\"cast\"]>(\n          queryKeys.persons,\n          updateCacheData(data.credits.cast)\n        );\n      },\n    }\n  );\n}\n\nexport default useMovie;\n","import styled from \"styled-components\";\n\nconst Svg = styled.svg`\n  fill: #ff0000;\n`;\n\nconst Youtube = () => (\n  <Svg\n    role=\"img\"\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"3ch\"\n  >\n    <title>Youtube</title>\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={5}\n      d=\"M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z\"\n    />\n  </Svg>\n);\n\nexport default Youtube;\n","import { RouteComponentProps, useParams } from \"@reach/router\";\nimport { useCallback, useState } from \"react\";\nimport MediaListItem from \"../components/MediaListItem\";\nimport MediaScroller from \"../components/MediaScroller\";\nimport Modal from \"../components/Modal\";\nimport ReadMore from \"../components/ReadMore\";\nimport {\n  Figure,\n  Header,\n  Image,\n  ImageContainer,\n  MediaDescription,\n  MediaGridSection,\n  MediaScreenContainer,\n  SectionWithBGColor,\n  TrailerButton,\n} from \"../components/StyledElements\";\nimport YoutubeTrailer from \"../components/YoutubeTrailer\";\nimport useMovie from \"../hooks/data/useMovie\";\nimport Youtube from \"../icons/Youtube\";\nimport { MediaType } from \"../types/common\";\nimport {\n  getBackgroundImageSrc,\n  getImageHeightAndWidth,\n  getImageSrc,\n  getReleaseDate,\n  minuteToTime,\n} from \"../utils/utils\";\n\ninterface MovieProps extends RouteComponentProps {\n  movieId?: string;\n}\n\nconst Movie = (props: MovieProps) => {\n  const { movieId } = useParams();\n  const { data, isFetching } = useMovie(parseInt(movieId));\n  const imageSrc = getImageSrc(data?.poster_path, \"poster\");\n  const [height, width] = getImageHeightAndWidth(\"2/3\", 20);\n  const bgImageSrc = data?.backdrop_path\n    ? getBackgroundImageSrc(data?.backdrop_path)\n    : undefined;\n\n  const actors = data?.credits?.cast || [];\n  const recommendations = data?.recommendations?.results || [];\n  const actorsList = actors\n    .filter(({ profile_path }) => profile_path)\n    .map(({ id, name, character, profile_path }) => ({\n      id,\n      title: name,\n      image: getImageSrc(profile_path, \"profile\"),\n      caption: character,\n    }));\n  const recommendationsList = recommendations\n    .slice(0, 12)\n    .map(({ id, title, backdrop_path, release_date }) => ({\n      id,\n      title,\n      image: getImageSrc(backdrop_path, \"backdrop\"),\n      caption: getReleaseDate(release_date),\n    }));\n  const [, recommendationGridItemWidth] = getImageHeightAndWidth(\"16/9\", 7);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const toggleIsModalOpen = useCallback(\n    () => setIsModalOpen(!isModalOpen),\n    [isModalOpen]\n  );\n  const trailer = data?.videos?.results?.find(({ type }) => type === \"Trailer\");\n  return (\n    <>\n      <MediaScreenContainer>\n        <ImageContainer img={bgImageSrc}>\n          <Figure>\n            <picture>\n              <Image\n                aspectRatio=\"2/3\"\n                inlineSize={width}\n                blockSize={height}\n                alt={data?.title}\n                loading=\"lazy\"\n                srcSet={imageSrc.srcset}\n                src={imageSrc.src}\n                showPointer={!!trailer}\n                onClick={trailer && toggleIsModalOpen}\n              />\n            </picture>\n            <figcaption>\n              {trailer ? (\n                <>\n                  <TrailerButton className=\"btn\" onClick={toggleIsModalOpen}>\n                    <Youtube /> Watch Trailer\n                  </TrailerButton>\n                  <Modal onClose={toggleIsModalOpen} open={isModalOpen}>\n                    <YoutubeTrailer\n                      youtubeKey={trailer.key}\n                      onClose={toggleIsModalOpen}\n                      name={data?.title || \"\"}\n                    />\n                  </Modal>\n                </>\n              ) : (\n                getReleaseDate(data?.release_date || Date.now().toString())\n              )}\n            </figcaption>\n          </Figure>\n          <MediaDescription>\n            <div className=\"mediaHeading\">\n              <h1>\n                {data?.title}\n                <span>\n                  {`(${new Date(\n                    data?.release_date || Date.now()\n                  ).getFullYear()})`}\n                </span>\n              </h1>\n              <div className=\"mediaFacts\">\n                <span>\n                  {getReleaseDate(data?.release_date || Date.now().toString())}\n                </span>\n                {data?.runtime ? (\n                  <span>{minuteToTime(data?.runtime)}</span>\n                ) : null}\n              </div>\n            </div>\n            {data?.tagline ? <h4>{data.tagline}</h4> : null}\n\n            <div className=\"mediaGenres\">\n              {data?.genres?.map((genre) => (\n                <span key={genre.id}>{genre.name}</span>\n              ))}\n            </div>\n            <div>\n              <h3>Status</h3>\n              <p>{data?.status}</p>\n            </div>\n\n            {data?.overview ? (\n              <div>\n                <h3>Overview</h3>\n                <ReadMore text={data?.overview} />\n              </div>\n            ) : null}\n          </MediaDescription>\n        </ImageContainer>\n      </MediaScreenContainer>\n      <SectionWithBGColor id=\"actors\">\n        <Header>\n          <h1>Actors</h1>\n        </Header>\n        <MediaScroller\n          list={actorsList}\n          ratio=\"2/3\"\n          loading={isFetching}\n          mediaType={MediaType.Person}\n        />\n      </SectionWithBGColor>\n\n      {recommendationsList.length ? (\n        <MediaGridSection\n          id=\"recommendations\"\n          gridItemSize={recommendationGridItemWidth}\n        >\n          <Header>\n            <h1>Recommendations</h1>\n          </Header>\n\n          <div className=\"mediaGrid\">\n            {recommendationsList.map((item, index) => (\n              <MediaListItem\n                key={item.id || index}\n                item={item}\n                ratio=\"16/9\"\n                mediaType={MediaType.Movie}\n                size={7}\n              />\n            ))}\n          </div>\n        </MediaGridSection>\n      ) : null}\n    </>\n  );\n};\n\nexport default Movie;\n","const Moon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"h-6 w-6\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke=\"currentColor\"\n    width=\"3ch\"\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n      d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\"\n    />\n  </svg>\n);\n\nexport default Moon;\n","const MovieDB = () => (\n  <svg\n    role=\"img\"\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"currentColor\"\n    width=\"3ch\"\n  >\n    <title>The Movie Database</title>\n    <path d=\"M6.62 12a2.291 2.291 0 0 1 2.292-2.295h-.013A2.291 2.291 0 0 1 11.189 12a2.291 2.291 0 0 1-2.29 2.291h.013A2.291 2.291 0 0 1 6.62 12zm10.72-4.062h4.266a2.291 2.291 0 0 0 2.29-2.291 2.291 2.291 0 0 0-2.29-2.296H17.34a2.291 2.291 0 0 0-2.291 2.296 2.291 2.291 0 0 0 2.29 2.29zM2.688 20.645h8.285a2.291 2.291 0 0 0 2.291-2.292 2.291 2.291 0 0 0-2.29-2.295H2.687a2.291 2.291 0 0 0-2.291 2.295 2.291 2.291 0 0 0 2.29 2.292zm10.881-6.354h.81l1.894-4.586H15.19l-1.154 3.008h-.013l-1.135-3.008h-1.154zm4.208 0h1.011V9.705h-1.011zm2.878 0h3.235v-.93h-2.223v-.933h1.99v-.934h-1.99v-.855h2.107v-.934h-3.112zM1.31 7.941h1.01V4.247h1.31v-.895H0v.895h1.31zm3.747 0h1.011V5.959h1.958v1.984h1.011v-4.59h-1.01v1.711H6.061V3.351H5.057zm5.348 0h3.242v-.933H11.41v-.934h1.99v-.933h-1.99v-.856h2.107v-.934h-3.112zM.162 14.296h1.005v-3.52h.013l1.167 3.52h.765l1.206-3.52h.013v3.52h1.011v-4.59H3.82L2.755 12.7h-.013L1.686 9.705H.156zm14.534 6.353h1.641a3.188 3.188 0 0 0 .98-.149 2.531 2.531 0 0 0 .824-.437 2.123 2.123 0 0 0 .567-.713 2.193 2.193 0 0 0 .223-.983 2.399 2.399 0 0 0-.218-1.07 1.958 1.958 0 0 0-.586-.716 2.405 2.405 0 0 0-.873-.392 4.349 4.349 0 0 0-1.046-.13h-1.519zm1.013-3.656h.596a2.26 2.26 0 0 1 .606.08 1.514 1.514 0 0 1 .503.244 1.167 1.167 0 0 1 .34.412 1.28 1.28 0 0 1 .13.587 1.546 1.546 0 0 1-.13.658 1.127 1.127 0 0 1-.347.433 1.41 1.41 0 0 1-.518.238 2.797 2.797 0 0 1-.649.07h-.538zm4.686 3.656h1.88a2.997 2.997 0 0 0 .613-.064 1.735 1.735 0 0 0 .554-.214 1.221 1.221 0 0 0 .402-.39 1.105 1.105 0 0 0 .155-.606 1.188 1.188 0 0 0-.071-.415 1.01 1.01 0 0 0-.204-.34 1.087 1.087 0 0 0-.317-.24 1.297 1.297 0 0 0-.413-.13v-.012a1.203 1.203 0 0 0 .575-.366.962.962 0 0 0 .216-.648 1.081 1.081 0 0 0-.149-.603 1.022 1.022 0 0 0-.389-.354 1.673 1.673 0 0 0-.54-.169 4.463 4.463 0 0 0-.6-.041h-1.712zm1.011-3.734h.687a1.4 1.4 0 0 1 .24.022.748.748 0 0 1 .22.075.432.432 0 0 1 .16.147.418.418 0 0 1 .061.236.47.47 0 0 1-.055.233.433.433 0 0 1-.146.156.62.62 0 0 1-.204.084 1.058 1.058 0 0 1-.23.026h-.745zm0 1.835h.765a1.96 1.96 0 0 1 .266.02 1.015 1.015 0 0 1 .26.07.519.519 0 0 1 .204.152.406.406 0 0 1 .08.26.481.481 0 0 1-.06.253.519.519 0 0 1-.16.168.62.62 0 0 1-.217.09 1.155 1.155 0 0 1-.237.027H21.4z\" />\n  </svg>\n);\n\nexport default MovieDB;\n","const Search = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"h-6 w-6\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke=\"currentColor\"\n    width=\"3ch\"\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n      d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n    />\n  </svg>\n);\nexport default Search;\n","const Sun = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"h-6 w-6\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke=\"currentColor\"\n    width=\"3ch\"\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n      d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\"\n    />\n  </svg>\n);\n\nexport default Sun;\n","const User = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"h-6 w-6\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke=\"currentColor\"\n    width=\"3ch\"\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n      d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\n    />\n  </svg>\n);\n\nexport default User;\n","import { Link } from \"@reach/router\";\nimport { useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { appContext } from \"../AppContext\";\nimport Button from \"../components/Button\";\nimport Moon from \"../icons/Moon\";\nimport MovieDB from \"../icons/MovieDB\";\nimport Search from \"../icons/Search\";\nimport Sun from \"../icons/Sun\";\nimport User from \"../icons/User\";\n\nconst Nav = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  padding: ${(props) => props.theme.size.lg};\n  background-color: ${(props) => props.theme.colors.surface2};\n\n  .nav-logos {\n    display: flex;\n    gap: ${(props) => props.theme.size.md};\n  }\n\n  .nav-links {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    a {\n      display: flex;\n      align-items: center;\n      gap: ${(props) => props.theme.size.xxxs};\n      font-size: ${(props) => props.theme.size.lg};\n      font-weight: 600;\n      @media ${({ theme }) => theme.mediaQueries.below768} {\n        span {\n          display: none;\n        }\n      }\n    }\n\n    div {\n      display: flex;\n      padding-inline: ${(props) => props.theme.size.lg};\n    }\n  }\n`;\n\nconst StyledButton = styled(Button)`\n  all: unset;\n  place-content: center;\n  display: flex;\n  place-items: center;\n  padding: ${(props) => props.theme.size.xxs};\n  border-radius: 1ex;\n  &:hover {\n    cursor: pointer;\n    color: ${(props) => props.theme.colors.text2};\n    background-color: ${(props) => props.theme.colors.surface1};\n  }\n`;\n\nconst NavBar = () => {\n  const { isDarkMode, setIsDarkMode } = appContext();\n  const toggleDarkMode = useCallback(\n    () => setIsDarkMode(!isDarkMode),\n    [isDarkMode, setIsDarkMode]\n  );\n\n  return (\n    <Nav>\n      <div className=\"nav-links\">\n        <Link to={process.env.PUBLIC_URL}>\n          <MovieDB />\n          <span>MovieHub</span>\n        </Link>\n        <div>\n          <StyledButton onClick={console.log}>Movie</StyledButton>\n          <StyledButton onClick={console.log}>Tv</StyledButton>\n        </div>\n      </div>\n      <div className=\"nav-logos\">\n        <StyledButton onClick={console.log}>\n          <Search />\n        </StyledButton>\n        <StyledButton onClick={toggleDarkMode}>\n          {isDarkMode ? <Sun /> : <Moon />}\n        </StyledButton>\n\n        <StyledButton onClick={console.log}>\n          <User />\n        </StyledButton>\n      </div>\n    </Nav>\n  );\n};\n\nexport default NavBar;\n","import { useQuery } from \"react-query\";\nimport { queryClient } from \"../../App\";\nimport { fetcher } from \"../../services/api\";\nimport { Person } from \"../../types/Person\";\nimport { queryKeys } from \"../../utils/constants\";\nimport { getUrl } from \"../../utils/utils\";\n\nfunction usePerson(id: number) {\n  return useQuery<Person, number, Person, [\"person\", number]>(\n    [\"person\", id],\n    () =>\n      fetcher(\n        getUrl(\n          `person/${id}`,\n          \"&append_to_response=combined_credits,external_ids\"\n        )\n      ),\n    {\n      initialData: () => {\n        const queryData = queryClient.getQueryData<Person[]>(queryKeys.persons);\n        const person = queryData?.find((data) => data.id === id);\n        return person;\n      },\n      staleTime: 0,\n    }\n  );\n}\n\nexport default usePerson;\n","import styled from \"styled-components\";\n\nconst Svg = styled.svg`\n  fill: ${(props) => props.theme.colors.text1};\n`;\n\nconst Facebook = () => (\n  <Svg\n    role=\"img\"\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"3ch\"\n  >\n    <title>Facebook</title>\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={5}\n      d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\"\n    />\n  </Svg>\n);\nexport default Facebook;\n","import styled from \"styled-components\";\n\nconst Svg = styled.svg`\n  fill: ${(props) => props.theme.colors.text1};\n`;\n\nconst Instagram = () => (\n  <Svg\n    role=\"img\"\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"3ch\"\n  >\n    <title>Instagram</title>\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={5}\n      d=\"M12 0C8.74 0 8.333.015 7.053.072 5.775.132 4.905.333 4.14.63c-.789.306-1.459.717-2.126 1.384S.935 3.35.63 4.14C.333 4.905.131 5.775.072 7.053.012 8.333 0 8.74 0 12s.015 3.667.072 4.947c.06 1.277.261 2.148.558 2.913.306.788.717 1.459 1.384 2.126.667.666 1.336 1.079 2.126 1.384.766.296 1.636.499 2.913.558C8.333 23.988 8.74 24 12 24s3.667-.015 4.947-.072c1.277-.06 2.148-.262 2.913-.558.788-.306 1.459-.718 2.126-1.384.666-.667 1.079-1.335 1.384-2.126.296-.765.499-1.636.558-2.913.06-1.28.072-1.687.072-4.947s-.015-3.667-.072-4.947c-.06-1.277-.262-2.149-.558-2.913-.306-.789-.718-1.459-1.384-2.126C21.319 1.347 20.651.935 19.86.63c-.765-.297-1.636-.499-2.913-.558C15.667.012 15.26 0 12 0zm0 2.16c3.203 0 3.585.016 4.85.071 1.17.055 1.805.249 2.227.415.562.217.96.477 1.382.896.419.42.679.819.896 1.381.164.422.36 1.057.413 2.227.057 1.266.07 1.646.07 4.85s-.015 3.585-.074 4.85c-.061 1.17-.256 1.805-.421 2.227-.224.562-.479.96-.899 1.382-.419.419-.824.679-1.38.896-.42.164-1.065.36-2.235.413-1.274.057-1.649.07-4.859.07-3.211 0-3.586-.015-4.859-.074-1.171-.061-1.816-.256-2.236-.421-.569-.224-.96-.479-1.379-.899-.421-.419-.69-.824-.9-1.38-.165-.42-.359-1.065-.42-2.235-.045-1.26-.061-1.649-.061-4.844 0-3.196.016-3.586.061-4.861.061-1.17.255-1.814.42-2.234.21-.57.479-.96.9-1.381.419-.419.81-.689 1.379-.898.42-.166 1.051-.361 2.221-.421 1.275-.045 1.65-.06 4.859-.06l.045.03zm0 3.678c-3.405 0-6.162 2.76-6.162 6.162 0 3.405 2.76 6.162 6.162 6.162 3.405 0 6.162-2.76 6.162-6.162 0-3.405-2.76-6.162-6.162-6.162zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm7.846-10.405c0 .795-.646 1.44-1.44 1.44-.795 0-1.44-.646-1.44-1.44 0-.794.646-1.439 1.44-1.439.793-.001 1.44.645 1.44 1.439z\"\n    />\n  </Svg>\n);\nexport default Instagram;\n","import styled from \"styled-components\";\n\nconst Svg = styled.svg`\n  fill: ${(props) => props.theme.colors.text1};\n`;\n\nconst Twitter = () => (\n  <Svg\n    role=\"img\"\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"3ch\"\n  >\n    <title>Twitter</title>\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={5}\n      d=\"M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z\"\n    />\n  </Svg>\n);\nexport default Twitter;\n","import { RouteComponentProps, useParams } from \"@reach/router\";\nimport MediaScroller from \"../components/MediaScroller\";\nimport ReadMore from \"../components/ReadMore\";\nimport {\n  Figure,\n  Header,\n  Image,\n  ImageContainer,\n  MediaDescription,\n  MediaScreenContainer,\n  SectionWithBGColor,\n} from \"../components/StyledElements\";\nimport usePerson from \"../hooks/data/usePerson\";\nimport Facebook from \"../icons/Facebook\";\nimport Instagram from \"../icons/Instagram\";\nimport Twitter from \"../icons/Twitter\";\nimport { MediaType } from \"../types/common\";\nimport {\n  calculate_age,\n  getImageHeightAndWidth,\n  getImageSrc,\n  getReleaseDate,\n} from \"../utils/utils\";\n\ninterface PersonProps extends RouteComponentProps {\n  tvId?: string;\n}\n\nconst Person = (props: PersonProps) => {\n  const { personId } = useParams();\n  const { data, isFetching } = usePerson(parseInt(personId));\n  const imageSrc = getImageSrc(data?.profile_path, \"profile\");\n  const [height, width] = getImageHeightAndWidth(\"2/3\", 20);\n\n  const credits = data?.combined_credits?.cast || [];\n  const movies = credits\n    .filter(({ media_type }) => media_type === MediaType.Movie)\n    .map(({ id, title = \"\", poster_path, release_date }) => ({\n      id,\n      title,\n      image: getImageSrc(poster_path, \"poster\"),\n      caption: release_date ? getReleaseDate(release_date) : \"\",\n    }));\n\n  const tvs = credits\n    .filter(({ media_type }) => media_type === MediaType.Tv)\n    .map(({ id, name = \"\", backdrop_path, first_air_date }) => ({\n      id,\n      title: name,\n      image: getImageSrc(backdrop_path, \"backdrop\"),\n      caption: first_air_date ? getReleaseDate(first_air_date) : \"\",\n    }));\n\n  return (\n    <>\n      <MediaScreenContainer>\n        <ImageContainer>\n          <Figure>\n            <picture>\n              <Image\n                aspectRatio=\"2/3\"\n                inlineSize={width}\n                blockSize={height}\n                alt={data?.name}\n                loading=\"lazy\"\n                srcSet={imageSrc.srcset}\n                src={imageSrc.src}\n              />\n            </picture>\n            <figcaption>\n              {getReleaseDate(data?.birthday || Date.now().toString())}\n            </figcaption>\n          </Figure>\n\n          <MediaDescription>\n            <div className=\"mediaHeading\">\n              <h1>{data?.name}</h1>\n              <div className=\"mediaFacts\">\n                {data?.birthday ? (\n                  <span>\n                    {`${getReleaseDate(data?.birthday)} (${calculate_age(\n                      data?.birthday\n                    )} years old)`}\n                  </span>\n                ) : null}\n              </div>\n            </div>\n\n            {data?.place_of_birth ? (\n              <div>\n                <h3>Place of Birth</h3>\n                <p>{data?.place_of_birth}</p>\n              </div>\n            ) : null}\n\n            {data?.external_ids ? (\n              <div className=\"mediaSocial\">\n                {data?.external_ids.twitter_id ? (\n                  <a\n                    href={`https://twitter.com/${data?.external_ids.twitter_id}`}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    <Twitter />\n                  </a>\n                ) : null}\n\n                {data?.external_ids.instagram_id ? (\n                  <a\n                    href={`https://www.instagram.com/${data?.external_ids.instagram_id}`}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    <Instagram />\n                  </a>\n                ) : null}\n\n                {data?.external_ids.facebook_id ? (\n                  <a\n                    href={`https://www.facebook.com/${data?.external_ids.facebook_id}`}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    <Facebook />\n                  </a>\n                ) : null}\n              </div>\n            ) : null}\n\n            {data?.biography ? (\n              <div>\n                <h3>Biography</h3>\n                <ReadMore text={data?.biography} />\n              </div>\n            ) : null}\n          </MediaDescription>\n        </ImageContainer>\n      </MediaScreenContainer>\n      {movies.length ? (\n        <SectionWithBGColor id=\"Movies\">\n          <Header>\n            <h1>Acted in Movies</h1>\n          </Header>\n          <MediaScroller\n            list={movies}\n            ratio=\"2/3\"\n            loading={isFetching}\n            mediaType={MediaType.Movie}\n          />\n        </SectionWithBGColor>\n      ) : null}\n      {tvs.length ? (\n        <SectionWithBGColor id=\"actors\">\n          <Header>\n            <h1>Acted in Tv Shows</h1>\n          </Header>\n          <MediaScroller\n            list={tvs}\n            ratio=\"16/9\"\n            loading={isFetching}\n            mediaType={MediaType.Tv}\n          />\n        </SectionWithBGColor>\n      ) : null}\n    </>\n  );\n};\nexport default Person;\n","import { useQuery } from \"react-query\";\nimport { queryClient } from \"../../App\";\nimport { fetcher } from \"../../services/api\";\nimport { Tv } from \"../../types/Tv\";\nimport { queryKeys } from \"../../utils/constants\";\nimport { getUrl, updateCacheData } from \"../../utils/utils\";\n\nfunction useTv(id: number) {\n  return useQuery<Tv, number, Tv, [\"tv\", number]>(\n    [\"tv\", id],\n    () =>\n      fetcher(\n        getUrl(`tv/${id}`, \"&append_to_response=recommendations,videos,credits\")\n      ),\n    {\n      initialData: () => {\n        const queryData = queryClient.getQueryData<Tv[]>(queryKeys.tvs);\n        const tv = queryData?.find((data) => data.id === id);\n        return tv;\n      },\n      staleTime: 0,\n      onSuccess: (data) => {\n        queryClient.setQueryData<Tv[\"credits\"][\"cast\"]>(\n          queryKeys.persons,\n          updateCacheData(data.credits.cast)\n        );\n      },\n    }\n  );\n}\n\nexport default useTv;\n","import { RouteComponentProps, useParams } from \"@reach/router\";\nimport { useCallback, useState } from \"react\";\nimport MediaListItem from \"../components/MediaListItem\";\nimport MediaScroller from \"../components/MediaScroller\";\nimport Modal from \"../components/Modal\";\nimport ReadMore from \"../components/ReadMore\";\nimport {\n  Figure,\n  Header,\n  Image,\n  ImageContainer,\n  MediaDescription,\n  MediaGridSection,\n  MediaScreenContainer,\n  SectionWithBGColor,\n  TrailerButton,\n} from \"../components/StyledElements\";\nimport YoutubeTrailer from \"../components/YoutubeTrailer\";\nimport useTv from \"../hooks/data/useTv\";\nimport Youtube from \"../icons/Youtube\";\nimport { MediaType } from \"../types/common\";\nimport {\n  getBackgroundImageSrc,\n  getImageHeightAndWidth,\n  getImageSrc,\n  getReleaseDate,\n} from \"../utils/utils\";\n\ninterface TvProps extends RouteComponentProps {\n  tvId?: string;\n}\n\nconst Tv = (props: TvProps) => {\n  const { tvId } = useParams();\n  const { data, isFetching } = useTv(parseInt(tvId));\n  const imageSrc = getImageSrc(data?.poster_path, \"poster\");\n  const [height, width] = getImageHeightAndWidth(\"2/3\", 20);\n  const bgImageSrc = data?.backdrop_path\n    ? getBackgroundImageSrc(data?.backdrop_path)\n    : undefined;\n\n  const actors = data?.credits?.cast || [];\n  const recommendations = data?.recommendations?.results || [];\n  const actorsList = actors\n    .filter(({ profile_path }) => profile_path)\n    .map(({ id, name, character, profile_path }) => ({\n      id,\n      title: name,\n      image: getImageSrc(profile_path, \"profile\"),\n      caption: character,\n    }));\n  const recommendationsList = recommendations\n    .slice(0, 12)\n    .map(({ id, name, backdrop_path, first_air_date }) => ({\n      id,\n      title: name,\n      image: getImageSrc(backdrop_path, \"backdrop\"),\n      caption: getReleaseDate(first_air_date),\n    }));\n  const [, recommendationGridItemWidth] = getImageHeightAndWidth(\"16/9\", 7);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const toggleIsModalOpen = useCallback(\n    () => setIsModalOpen(!isModalOpen),\n    [isModalOpen]\n  );\n  const trailer = data?.videos?.results?.find(({ type }) => type === \"Trailer\");\n\n  return (\n    <>\n      <MediaScreenContainer>\n        <ImageContainer img={bgImageSrc}>\n          <Figure>\n            <picture>\n              <Image\n                aspectRatio=\"2/3\"\n                inlineSize={width}\n                blockSize={height}\n                alt={data?.name}\n                loading=\"lazy\"\n                srcSet={imageSrc.srcset}\n                src={imageSrc.src}\n                showPointer={!!trailer}\n                onClick={trailer && toggleIsModalOpen}\n              />\n            </picture>\n            <figcaption>\n              {trailer ? (\n                <>\n                  <TrailerButton className=\"btn\" onClick={toggleIsModalOpen}>\n                    <Youtube /> Watch Trailer\n                  </TrailerButton>\n                  <Modal onClose={toggleIsModalOpen} open={isModalOpen}>\n                    <YoutubeTrailer\n                      youtubeKey={trailer.key}\n                      onClose={toggleIsModalOpen}\n                      name={data?.name || \"\"}\n                    />\n                  </Modal>\n                </>\n              ) : (\n                getReleaseDate(data?.first_air_date || Date.now().toString())\n              )}\n            </figcaption>\n          </Figure>\n\n          <MediaDescription>\n            <div className=\"mediaHeading\">\n              <h1>\n                {data?.name}\n                <span>\n                  {`(${new Date(\n                    data?.first_air_date || Date.now()\n                  ).getFullYear()})`}\n                </span>\n              </h1>\n              <div className=\"mediaFacts\">\n                <span>\n                  {getReleaseDate(\n                    data?.first_air_date || Date.now().toString()\n                  )}\n                </span>\n              </div>\n            </div>\n            {data?.tagline ? <h4>{data.tagline}</h4> : null}\n\n            <div className=\"mediaGenres\">\n              {data?.genres?.map((genre) => (\n                <span key={genre.id}>{genre.name}</span>\n              ))}\n            </div>\n            <div>\n              <h3>Status</h3>\n              <p>{data?.status}</p>\n            </div>\n            {data?.overview ? (\n              <div>\n                <h3>Overview</h3>\n                <ReadMore text={data?.overview} />\n              </div>\n            ) : null}\n          </MediaDescription>\n        </ImageContainer>\n      </MediaScreenContainer>\n      <SectionWithBGColor id=\"actors\">\n        <Header>\n          <h1>Actors</h1>\n        </Header>\n        <MediaScroller\n          list={actorsList}\n          ratio=\"2/3\"\n          loading={isFetching}\n          mediaType={MediaType.Person}\n        />\n      </SectionWithBGColor>\n      {recommendationsList.length ? (\n        <MediaGridSection\n          id=\"recommendations\"\n          gridItemSize={recommendationGridItemWidth}\n        >\n          <Header>\n            <h1>Recommendations</h1>\n          </Header>\n\n          <div className=\"mediaGrid\">\n            {recommendationsList.map((item, index) => (\n              <MediaListItem\n                key={item.id || index}\n                item={item}\n                ratio=\"16/9\"\n                mediaType={MediaType.Tv}\n                size={7}\n              />\n            ))}\n          </div>\n        </MediaGridSection>\n      ) : null}\n    </>\n  );\n};\nexport default Tv;\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const getTheme = (isDarkMode = false) => {\r\n  /* brand foundation */\r\n  const hue = \"200\";\r\n  const saturation = \"100%\";\r\n  const lightness = \"50%\";\r\n\r\n  /* light */\r\n  const light = {\r\n    brand: `hsl(${hue} ${saturation} ${lightness}`,\r\n    text1: `hsl(${hue} ${saturation} 10%)`,\r\n    text2: `hsl(${hue} 30% 30%)`,\r\n    surface1: `hsl(${hue} 25% 90%)`,\r\n    surface2: `hsl(${hue} 20% 99%)`,\r\n    surface3: `hsl(${hue} 20% 92%)`,\r\n    surface4: `hsl(${hue} 20% 85%)`,\r\n  };\r\n\r\n  const dark = {\r\n    brand: `hsl(${hue} calc(${saturation} / 2) calc(${lightness} / 1.5))`,\r\n    text1: `hsl(${hue} 15% 85%)`,\r\n    text2: `hsl(${hue} 5% 65%)`,\r\n    surface1: `hsl(${hue} 10% 10%)`,\r\n    surface2: `hsl(${hue} 10% 15%)`,\r\n    surface3: `hsl(${hue} 5% 20%)`,\r\n    surface4: `hsl(${hue} 5% 25%)`,\r\n  };\r\n\r\n  function sizeStepUp(n: number, up = true): string {\r\n    let result = 1;\r\n    const typeScale = 1.25;\r\n    while (n > 1) {\r\n      result = up ? result * typeScale : result / typeScale;\r\n      n--;\r\n    }\r\n    return `calc(1rem * ${result})`;\r\n  }\r\n  const colors = isDarkMode ? dark : light;\r\n  return {\r\n    colors,\r\n    size: {\r\n      xxxs: sizeStepUp(5, false),\r\n      xxs: sizeStepUp(4, false),\r\n      xs: sizeStepUp(3, false),\r\n      sm: sizeStepUp(2, false),\r\n      md: sizeStepUp(1),\r\n      lg: sizeStepUp(2),\r\n      xl: sizeStepUp(3),\r\n      xxl: sizeStepUp(4),\r\n      xxxl: sizeStepUp(5),\r\n    },\r\n    mediaQueries: {\r\n      below1400: \"only screen and (max-width: 1400px)\",\r\n      below768: \"only screen and (max-width: 768px)\",\r\n      below375: \"only screen and (max-width: 375px)\",\r\n    },\r\n    getColorWithOpacity: (color: keyof typeof colors, opacity: number) => {\r\n      const colorStr = colors[color];\r\n      const [hue, saturation, lightness] =\r\n        colorStr.match(/\\d+/g)?.map(Number) ?? [];\r\n      return `hsla(${hue}, ${saturation}%, ${lightness}%, ${opacity})`;\r\n    },\r\n  };\r\n};\r\n\r\nconst theme = getTheme();\r\ntype ThemeType = typeof theme;\r\ndeclare module \"styled-components\" {\r\n  export interface DefaultTheme extends ThemeType {}\r\n}\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  html {\r\n    /* grow as per screen width */\r\n    font-size: calc(1px + 1vw);\r\n    line-height: calc(1.5rem + 0.5vw);\r\n    block-size: 100%;\r\n    background-color: ${({ theme }) => theme.colors.surface1};\r\n    color: ${({ theme }) => theme.colors.text1};\r\n    font-family: 'Roboto Mono', monospace, system-ui, sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n\r\n    @media ${({ theme }) => theme.mediaQueries.below1400} {\r\n      font-size: 16px;\r\n    }\r\n\r\n    @media ${({ theme }) => theme.mediaQueries.below768} {\r\n      font-size: 14px;\r\n    }\r\n\r\n    @media ${({ theme }) => theme.mediaQueries.below375} {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  body {\r\n    background-color: ${({ theme }) => theme.colors.surface1};\r\n  }\r\n\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  section {\r\n    padding-block: 1rem;\r\n  }\r\n\r\n  a {\r\n    color: inherit;\r\n    text-decoration: none;\r\n  }\r\n`;\r\n","import { Router } from \"@reach/router\";\nimport { SkeletonTheme } from \"react-loading-skeleton\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { ThemeProvider } from \"styled-components\";\nimport { appContext } from \"./AppContext\";\nimport Home from \"./sections/Home\";\nimport Movie from \"./sections/Movie\";\nimport NavBar from \"./sections/NavBar\";\nimport Person from \"./sections/Person\";\nimport Tv from \"./sections/Tv\";\nimport { getTheme, GlobalStyles } from \"./styles/theme\";\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n    },\n  },\n});\n\nfunction App() {\n  const { isDarkMode } = appContext();\n  const theme = getTheme(isDarkMode);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      <SkeletonTheme\n        color={theme.colors.surface2}\n        highlightColor={theme.colors.surface1}\n      >\n        <QueryClientProvider client={queryClient}>\n          <ReactQueryDevtools />\n          <NavBar />\n          <Router basepath={process.env.PUBLIC_URL} primary={false}>\n            <Home path=\"/\" />\n            <Movie path=\"/movie/:movieId\" />\n            <Tv path=\"/tv/:tvId\" />\n            <Person path=\"/person/:personId\" />\n          </Router>\n        </QueryClientProvider>\n      </SkeletonTheme>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { AppContextProvider } from \"./AppContext\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppContextProvider>\n      <App />\n    </AppContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}