{"version":3,"sources":["services/appReducer.ts","utils/constants.ts","AppContext.tsx","hooks/createContext.tsx","hooks/useDarkMode.tsx","components/Button.tsx","hooks/useClickOutside.tsx","icons/ArrowDown.tsx","icons/ArrowUp.tsx","utils/environment.ts","utils/utils.ts","types/common.ts","components/ButtonGroup.tsx","icons/ArrowLeft.tsx","icons/ArrowRight.tsx","components/MediaListItem.tsx","components/MediaScroller.tsx","components/StyledElements.tsx","services/api.ts","hooks/data/useContentByGenre.tsx","hooks/data/useGenres.tsx","hooks/useInView.tsx","sections/GenreSection.tsx","sections/ContentByGenres.tsx","hooks/data/useDiscoverMovies.tsx","sections/DiscoverMovies.tsx","hooks/data/useTrending.tsx","sections/Trending.tsx","sections/Home.tsx","hooks/data/useMovie.tsx","sections/Movie.tsx","styles/theme.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["appReducer","state","action","initialState","movies","upcoming","popular","trending","genres","tv","queryKeys","ImageSize","poster","backdrop","profile","ctx","React","undefined","c","Error","Provider","createContext","AppProvider","AppContextProvider","children","useReducer","dispatch","value","useDarkMode","darkModeQuery","window","matchMedia","useState","matches","isDarkMode","setIsDarkMode","useEffect","darkModeHandler","addListener","removeEventListener","StyledButton","styled","button","theme","primary","colors","surface1","text1","props","size","xs","xxxs","md","Button","forwardRef","ref","onClick","disabled","rest","useClickOutside","callback","listener","event","el","current","contains","target","document","addEventListener","ArrowDown","xmlns","className","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","ArrowUp","environment","apiKey","process","baseURL","imageBaseURL","getUrl","path","queryString","getImageSrc","type","img","src","srcset","paths","filter","map","substring","join","getImageHeightAndWidth","ratio","split","i","widthRatio","heightRatio","height","width","getReleaseDate","release_date","Date","toLocaleDateString","year","month","day","minuteToTime","duration","hours","rhours","Math","floor","minutes","rminutes","round","updateCacheData","data","oldData","allData","uniqueIds","Array","from","Set","a","id","result","forEach","movie","find","m","push","getTVsFromApiResult","results","name","first_air_date","title","debounce","fn","timeout","time","args","clearTimeout","setTimeout","MediaType","MovieType","isSelected","text2","surface4","IconButton","isHidden","ButtonWrapper","div","lg","DropDown","surface3","DropDownContainer","ButtonGroup","items","containerRef","useRef","iconRef","dropDownRef","buttonRefs","hiddenItems","setHiddenItems","open","setOpen","handleDropDown","onWindowResize","useCallback","container","containerWidth","offsetWidth","occupiedWidth","lastVisible","element","index","elem","style","getComputedStyle","parseInt","marginLeft","marginRight","getWidthAndHorizontalMargins","setAttribute","left","offsetLeft","clientWidth","debouncedFunc","item","label","length","e","ArrowLeft","ArrowRight","Figure","figure","Image","inlineSize","blockSize","aspectRatio","surface2","Figcaption","figcaption","sm","MediaListItem","mediaType","to","image","alt","loading","srcSet","caption","Div","Arrow","span","bsize","MediaScrollerUL","ul","xl","MediaItem","li","MediaScroller","list","Movie","mediaList","createElement","isHiddenLeftArrow","setIsHiddenLeftArrow","isHiddenRightArrow","setIsHiddenRightArrow","scrollToRight","scrollLeft","scrollTo","top","behavior","scrollToLeft","handleScroll","scrollWidth","onScroll","Header","header","ButtonContainer","fetcher","url","fetch","response","json","useContentByGenre","genreId","enabled","useQuery","select","onSuccess","queryClient","setQueryData","useGenres","urls","Promise","all","multiFetcher","tvGenres","movieGenres","useInView","triggerOnce","threshold","root","rootMargin","inView","setInView","node","IntersectionObserver","observer","entries","entry","isIntersecting","disconnect","observe","Section","section","isBackdrop","GenreSection","genre","selectedMedia","setSelectedMedia","isLoading","mediaScrollerList","poster_path","backdrop_path","Tv","ContentByGenres","tvGenresId","commonGenres","includes","selectedButtonId","setSelectedButtonId","buttonListItems","useMemo","buttonId","currentTarget","dataset","genreData","genreDataIsLoading","useDiscoverMovies","Upcoming","DiscoverMovies","Popular","movieType","setMovieType","handleButton","useTrending","Trending","Home","useMovie","initialData","queryData","getQueryData","staleTime","MovieContainer","ImageContainer","xxl","getColorWithOpacity","mediaQueries","below768","MovieDescription","Actors","Recommendations","gridItemSize","movieId","useParams","console","log","imageSrc","bgImageSrc","actors","credits","cast","recommendations","actorsList","character","profile_path","recommendationsList","slice","recommendationGridItemWidth","now","toString","getFullYear","runtime","tagline","status","overview","Person","getTheme","hue","saturation","lightness","light","brand","surfaceShadow","dark","sizeStepUp","n","up","typeScale","xxs","xxxl","below1400","below375","color","opacity","match","Number","GlobalStyles","createGlobalStyle","QueryClient","defaultOptions","queries","refetchOnWindowFocus","Infinity","App","highlightColor","client","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0c31b7eb.chunk.js","sourcesContent":["import { State } from '../types/common';\r\n\r\nexport default function appReducer(state: State, action: any): State {\r\n  return state;\r\n}\r\n","import { State } from \"../types/common\";\r\n\r\nexport const initialState: State = {\r\n  movies: {\r\n    upcoming: [],\r\n    popular: [],\r\n    trending: [],\r\n    genres: [],\r\n  },\r\n  tv: {\r\n    trending: [],\r\n    genres: [],\r\n  },\r\n};\r\n\r\nexport const queryKeys = {\r\n  movies: \"all-movies\",\r\n  tvs: \"all-tvs\",\r\n};\r\n\r\nexport const ImageSize = {\r\n  poster: [\"w92\", \"w154\", \"w185\", \"w342\", \"w500\", \"w780\", \"original\"],\r\n  backdrop: [\"w300\", \"w780\", \"w1280\", \"original\"],\r\n  profile: [\"w45\", \"w185\", \"original\"],\r\n};\r\n","import { useReducer } from 'react';\r\nimport createContext from './hooks/createContext';\r\nimport appReducer from './services/appReducer';\r\nimport { AppContext } from './types/common';\r\nimport { initialState } from './utils/constants';\r\n\r\nconst [appContext, AppProvider] = createContext<AppContext>();\r\n\r\nexport const AppContextProvider = ({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) => {\r\n  const [state, dispatch] = useReducer(appReducer, initialState);\r\n  return <AppProvider value={{ ...state, dispatch }}>{children}</AppProvider>;\r\n};\r\n\r\nexport { appContext };\r\n","import * as React from 'react';\r\n\r\nexport default function createContext<A extends {} | null>() {\r\n  const ctx = React.createContext<A | undefined>(undefined);\r\n\r\n  const useContext = () => {\r\n    const c = React.useContext(ctx);\r\n    if (c === undefined)\r\n      throw new Error('useContext must be inside a Provider with a value');\r\n    return c;\r\n  };\r\n  return [useContext, ctx.Provider] as const;\r\n}\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst useDarkMode = () => {\r\n  const darkModeQuery = window?.matchMedia('(prefers-color-scheme: dark)');\r\n  const [isDarkMode, setIsDarkMode] = useState(darkModeQuery?.matches);\r\n  useEffect(() => {\r\n    const darkModeHandler = ({ matches }: MediaQueryListEvent): void =>\r\n      setIsDarkMode(matches);\r\n    darkModeQuery?.addListener(darkModeHandler);\r\n    return () => darkModeQuery.removeEventListener('change', darkModeHandler);\r\n  }, [darkModeQuery]);\r\n\r\n  return isDarkMode;\r\n};\r\n\r\nexport default useDarkMode;\r\n","import React from 'react';\nimport styled from 'styled-components';\n\ntype StyledButtonProps = { primary: boolean };\nconst StyledButton = styled.button<StyledButtonProps>`\n  min-width: max-content;\n  height: min-content;\n  color: ${({ theme, primary }) => {\n    if (primary) {\n      return theme.colors.surface1;\n    }\n    return theme.colors.text1;\n  }};\n\n  border-radius: ${(props) => props.theme.size.xs};\n  border: 1px solid ${({ theme }) => theme.colors.text1};\n  font-weight: 600;\n\n  background-color: ${({ theme, primary }) => {\n    if (primary) {\n      return theme.colors.text1;\n    }\n    return 'inherit';\n  }};\n\n  text-transform: capitalize;\n  cursor: pointer;\n\n  padding-block: ${(props) => props.theme.size.xxxs};\n  padding-inline: ${(props) => props.theme.size.md};\n`;\n\ntype ButtonOwnProps = {\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n  children: React.ReactNode;\n  primary?: boolean;\n};\n\ntype ButtonProps = ButtonOwnProps &\n  React.ButtonHTMLAttributes<HTMLButtonElement>;\n\nconst Button = React.forwardRef(\n  (\n    {\n      primary = true,\n      onClick,\n      children,\n      disabled = false,\n      ...rest\n    }: ButtonProps,\n    ref: React.Ref<HTMLButtonElement>\n  ) => {\n    return (\n      <StyledButton\n        ref={ref}\n        primary={primary}\n        onClick={onClick}\n        disabled={disabled}\n        {...rest}\n      >\n        {children}\n      </StyledButton>\n    );\n  }\n);\n\nexport default Button;\n","import { RefObject, useEffect } from 'react';\r\n\r\ntype AnyEvent = MouseEvent | TouchEvent;\r\nfunction useClickOutside<T extends HTMLElement = HTMLElement>(\r\n  ref: RefObject<T>,\r\n  callback: (event: AnyEvent) => void\r\n) {\r\n  useEffect(() => {\r\n    const listener = (event: AnyEvent) => {\r\n      const el = ref?.current;\r\n\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!el || el.contains(event.target as Node)) {\r\n        return;\r\n      }\r\n\r\n      callback(event);\r\n    };\r\n\r\n    document.addEventListener(`mousedown`, listener);\r\n    document.addEventListener(`touchstart`, listener);\r\n\r\n    return () => {\r\n      document.removeEventListener(`mousedown`, listener);\r\n      document.removeEventListener(`touchstart`, listener);\r\n    };\r\n\r\n    // Reload only if ref or handler changes\r\n  }, [ref, callback]);\r\n}\r\n\r\nexport default useClickOutside;\r\n","const ArrowDown = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className=\"h-6 w-6\"\r\n    fill=\"none\"\r\n    viewBox=\"0 0 24 24\"\r\n    stroke=\"currentColor\"\r\n  >\r\n    <path\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      strokeWidth={5}\r\n      d=\"M19 9l-7 7-7-7\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default ArrowDown;\r\n","const ArrowUp = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className=\"h-6 w-6\"\r\n    fill=\"none\"\r\n    viewBox=\"0 0 24 24\"\r\n    stroke=\"currentColor\"\r\n  >\r\n    <path\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      strokeWidth={5}\r\n      d=\"M5 15l7-7 7 7\"\r\n    />\r\n  </svg>\r\n);\r\nexport default ArrowUp;\r\n","const environment = {\r\n  apiKey: process.env.REACT_APP_MOVIEDB_KEY,\r\n  baseURL: process.env.REACT_APP_BASEURL,\r\n  imageBaseURL: process.env.REACT_APP_IMG_BASEURL,\r\n};\r\nexport default environment;\r\n","import { ImageRatio, ImageType, Media } from \"../types/common\";\r\nimport { TVResult } from \"../types/Tv\";\r\nimport { ImageSize } from \"./constants\";\r\nimport environment from \"./environment\";\r\n\r\nconst { apiKey, baseURL, imageBaseURL } = environment;\r\n\r\nexport const getUrl = (path: string, queryString = \"\"): string =>\r\n  `${baseURL}${path}?api_key=${apiKey}${queryString}`;\r\n\r\nexport function getImageSrc(path: string | undefined | null, type: ImageType) {\r\n  const img = { src: \"\", srcset: \"\" };\r\n  if (path) {\r\n    img.src = `${imageBaseURL}original${path}`;\r\n    const sizes = ImageSize[type].filter((size) => size !== \"original\");\r\n    const paths = sizes.map(\r\n      (size) => `${imageBaseURL}${size}${path} ${size.substring(1)}w`\r\n    );\r\n    img.srcset = paths.join(\", \");\r\n  }\r\n  return img;\r\n}\r\n\r\nexport const getBackgroundImageSrc = (path: string) =>\r\n  `${imageBaseURL}w1920_and_h800_face${path}`;\r\n\r\nexport const getImageHeightAndWidth = (\r\n  ratio: ImageRatio = \"1/1\",\r\n  size: number = 10\r\n) => {\r\n  const [widthRatio, heightRatio] = ratio.split(\"/\").map((i) => +i);\r\n\r\n  const height =\r\n    widthRatio > heightRatio\r\n      ? `${size}rem`\r\n      : `${(size * heightRatio) / widthRatio}rem`;\r\n\r\n  const width =\r\n    widthRatio > heightRatio\r\n      ? `${(size * widthRatio) / heightRatio}rem`\r\n      : `${size}rem`;\r\n\r\n  return [height, width];\r\n};\r\n\r\nexport const getReleaseDate = (release_date: string) =>\r\n  new Date(release_date).toLocaleDateString(\"en-us\", {\r\n    year: \"numeric\",\r\n    month: \"short\",\r\n    day: \"numeric\",\r\n  });\r\n\r\nexport function minuteToTime(duration: number) {\r\n  const hours = duration / 60;\r\n  const rhours = Math.floor(hours);\r\n  var minutes = (hours - rhours) * 60;\r\n  var rminutes = Math.round(minutes);\r\n  return `${rhours}h ${rminutes}m`;\r\n}\r\n\r\nexport function updateCacheData<T extends { id: number }>(data: T[]) {\r\n  return (oldData: T[] = []) => {\r\n    const allData = [...oldData, ...data];\r\n    const uniqueIds = Array.from(new Set(allData.map((a) => a.id)));\r\n    const result: T[] = [];\r\n    uniqueIds.forEach((id) => {\r\n      const movie = allData.find((m) => m.id === id);\r\n      if (movie) result.push(movie);\r\n    });\r\n    return result;\r\n  };\r\n}\r\n\r\nexport const getTVsFromApiResult = (results: TVResult[]): Media[] => {\r\n  const tvs = results.map(({ name, first_air_date, ...rest }) => ({\r\n    title: name,\r\n    release_date: first_air_date,\r\n    ...rest,\r\n  }));\r\n  return tvs;\r\n};\r\n\r\nexport function debounce<T extends Function>(fn: T, time = 50) {\r\n  let timeout: NodeJS.Timeout;\r\n  return function (...args: any[]) {\r\n    if (timeout) {\r\n      clearTimeout(timeout);\r\n    }\r\n    timeout = setTimeout(() => {\r\n      fn(...args);\r\n      clearTimeout(timeout);\r\n    }, time);\r\n  };\r\n}\r\n\r\nexport const isTouchScreen = () => \"ontouchstart\" in window;\r\n","import { ImageSize } from \"../utils/constants\";\r\n\r\nexport type ImageType = keyof typeof ImageSize;\r\n\r\nexport type ImageRatio = \"2/3\" | \"1/1\" | \"16/9\";\r\n\r\nexport type Media = {\r\n  title: string;\r\n  id: number;\r\n  backdrop_path: string;\r\n  poster_path: string;\r\n  vote_average: number;\r\n  release_date: string;\r\n};\r\n\r\nexport enum MediaType {\r\n  Movie = \"movie\",\r\n  Tv = \"tv\",\r\n  Person = \"person\",\r\n}\r\n\r\nexport enum MovieType {\r\n  Popular = \"popular\",\r\n  Upcoming = \"upcoming\",\r\n}\r\n\r\nexport type Genre = {\r\n  id: number;\r\n  name: string;\r\n};\r\n\r\nexport type Genres = Genre[];\r\n\r\nexport type State = {};\r\n\r\nexport interface AppContext extends State {\r\n  dispatch: React.Dispatch<any>;\r\n}\r\n","import { useCallback, useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport useClickOutside from \"../hooks/useClickOutside\";\nimport ArrowDown from \"../icons/ArrowDown\";\nimport ArrowUp from \"../icons/ArrowUp\";\nimport { debounce } from \"../utils/utils\";\nimport Button from \"./Button\";\n\nconst StyledButton = styled(Button)<{ isSelected: boolean }>`\n  background-color: inherit;\n  border: none;\n  border-radius: unset;\n  color: ${({ isSelected, theme: { colors } }) =>\n    isSelected ? colors.text1 : colors.text2};\n  font-weight: ${({ isSelected }) => (isSelected ? 600 : 400)};\n\n  &:hover {\n    background-color: ${({ theme: { colors } }) => colors.surface4};\n  }\n\n  &[aria-hidden=\"true\"] {\n    visibility: hidden;\n  }\n`;\n\nconst IconButton = styled(Button)<{ isHidden: boolean }>`\n  border: none;\n  position: absolute;\n  background-color: inherit;\n  z-index: 1;\n  color: ${({ theme: { colors } }) => colors.text1};\n  visibility: ${(props) => (props.isHidden ? \"hidden\" : \"initial\")};\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  overflow-x: hidden;\n  border-bottom: 1px solid ${(props) => props.theme.colors.surface4};\n  margin-inline: ${(props) => props.theme.size.lg};\n  margin-block-end: ${(props) => props.theme.size.md};\n  padding-block: ${(props) => props.theme.size.xxxs};\n\n  & > button > svg {\n    width: 2ch;\n  }\n`;\n\nconst DropDown = styled.div`\n  background-color: ${(props) => props.theme.colors.surface3};\n  width: max-content;\n\n  position: absolute;\n  transform: translate(-60%, -20px);\n  z-index: 1;\n  display: flex;\n  flex-direction: column;\n\n  max-block-size: 200px;\n  overflow-y: scroll;\n  scrollbar-width: none;\n\n  &::-webkit-scrollbar {\n    width: 0;\n    height: 0;\n  }\n\n  & > button {\n    width: 100%;\n    padding-block: ${(props) => props.theme.size.xs};\n    text-align: left;\n  }\n`;\n\nconst DropDownContainer = styled.div`\n  position: relative;\n  width: max-content;\n`;\n\nconst getWidthAndHorizontalMargins = (elem: HTMLElement) => {\n  const style = window.getComputedStyle(elem);\n  return (\n    elem.offsetWidth +\n    parseInt(style.marginLeft, 10) +\n    parseInt(style.marginRight, 10)\n  );\n};\ntype Item = {\n  id: number;\n  label: string;\n  isSelected: boolean;\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n};\ntype ButtonGroupProps = {\n  items: Item[];\n};\nconst ButtonGroup = ({ items }: ButtonGroupProps) => {\n  const containerRef = useRef<HTMLDivElement | null>(null);\n  const iconRef = useRef<HTMLButtonElement | null>(null);\n  const dropDownRef = useRef<HTMLDivElement | null>(null);\n  const buttonRefs = useRef<(HTMLButtonElement | null)[]>([]);\n  const [hiddenItems, setHiddenItems] = useState<Item[]>([]);\n\n  const [open, setOpen] = useState(false);\n\n  const handleDropDown = () => setOpen(!open);\n\n  const onWindowResize = useCallback(() => {\n    // width of the container and icon\n    const container = containerRef.current;\n    if (container) {\n      const containerWidth = container.offsetWidth;\n      let occupiedWidth = iconRef.current?.offsetWidth || 0;\n\n      let lastVisible = buttonRefs.current[0];\n\n      let hiddenItems: Item[] = [];\n      buttonRefs.current.forEach((element, index) => {\n        if (element) {\n          const width = getWidthAndHorizontalMargins(element);\n          if (occupiedWidth + width <= containerWidth) {\n            element.setAttribute(\"aria-hidden\", \"false\");\n            lastVisible = element;\n          } else {\n            element.setAttribute(\"aria-hidden\", \"true\");\n            hiddenItems.push(items[index]);\n          }\n          occupiedWidth += width;\n        }\n      });\n\n      setHiddenItems(hiddenItems);\n      // based on last visible button set iconButton position\n      if (lastVisible && iconRef.current && dropDownRef.current) {\n        iconRef.current.style.left = `${\n          lastVisible.offsetLeft + lastVisible.clientWidth\n        }px`;\n        dropDownRef.current.style.left = `${iconRef.current.offsetLeft}px`;\n      }\n    }\n  }, [items]);\n\n  useEffect(() => {\n    onWindowResize();\n    const debouncedFunc = debounce(onWindowResize, 100);\n    window.addEventListener(\"resize\", debouncedFunc);\n    return () => {\n      window.removeEventListener(\"resize\", debouncedFunc);\n    };\n  }, [items, onWindowResize]);\n\n  useClickOutside(dropDownRef, () => open && handleDropDown());\n\n  return (\n    <>\n      <ButtonWrapper ref={containerRef}>\n        {items.map((item, i) => (\n          <StyledButton\n            key={item.id}\n            data-button-id={item.id}\n            onClick={item.onClick}\n            isSelected={item.isSelected}\n            ref={(ref) => (buttonRefs.current[i] = ref)}\n          >\n            {item.label}\n          </StyledButton>\n        ))}\n        <IconButton\n          onClick={handleDropDown}\n          ref={iconRef}\n          aria-label=\"Expand Genres\"\n          isHidden={hiddenItems.length === 0}\n        >\n          {open ? <ArrowUp /> : <ArrowDown />}\n        </IconButton>\n      </ButtonWrapper>\n\n      <DropDownContainer ref={dropDownRef}>\n        {open && (\n          <DropDown>\n            {hiddenItems.map((item) => (\n              <StyledButton\n                key={item.id}\n                onClick={(e) => item.onClick(e)}\n                data-button-id={item.id}\n                isSelected={item.isSelected}\n              >\n                {item.label}\n              </StyledButton>\n            ))}\n          </DropDown>\n        )}\n      </DropDownContainer>\n    </>\n  );\n};\n\nexport default ButtonGroup;\n","const ArrowLeft = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className=\"h-6 w-6\"\r\n    fill=\"none\"\r\n    viewBox=\"0 0 24 24\"\r\n    stroke=\"currentColor\"\r\n  >\r\n    <path\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      strokeWidth={5}\r\n      d=\"M15 19l-7-7 7-7\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default ArrowLeft;\r\n","const ArrowRight = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className=\"h-6 w-6\"\r\n    fill=\"none\"\r\n    viewBox=\"0 0 24 24\"\r\n    stroke=\"currentColor\"\r\n  >\r\n    <path\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      strokeWidth={5}\r\n      d=\"M9 5l7 7-7 7\"\r\n    />\r\n  </svg>\r\n);\r\nexport default ArrowRight;\r\n","import { Link } from \"@reach/router\";\nimport { ImageRatio, MediaType } from \"../types/common\";\nimport { getImageHeightAndWidth } from \"../utils/utils\";\nimport Skeleton from \"react-loading-skeleton\";\nimport styled from \"styled-components\";\n\nconst Figure = styled.figure`\n  scroll-snap-align: start;\n\n  display: grid;\n  gap: calc(${(props) => props.theme.size.lg} / 2);\n  margin: 0;\n\n  cursor: pointer;\n  user-select: none;\n\n  outline-offset: 12px;\n\n  &:focus {\n    outline-offset: 7px;\n  }\n`;\n\ntype ImageProps = {\n  aspectRatio: ImageRatio;\n  inlineSize: string;\n  blockSize: string;\n};\n\nconst Image = styled.img<ImageProps>`\n  inline-size: ${(props) => props.inlineSize};\n  block-size: ${(props) => props.blockSize};\n\n  aspect-ratio: ${(props) => props.aspectRatio};\n\n  object-fit: cover;\n\n  border-radius: 1ex;\n  border: none;\n  overflow: hidden;\n  background-image: ${(props) =>\n    `linear-gradient(to bottom, ${props.theme.colors.surface1}, ${props.theme.colors.surface2})`};\n`;\n\nconst Figcaption = styled.figcaption<{\n  inlineSize: string;\n}>`\n  line-height: ${(props) => props.theme.size.lg};\n  inline-size: ${(props) => props.inlineSize};\n  font-weight: 600;\n  font-size: ${(props) => props.theme.size.md};\n\n  & > p {\n    font-size: ${(props) => props.theme.size.sm};\n    font-weight: 400;\n    color: ${(props) => props.theme.colors.text2};\n    padding-block: ${(props) => props.theme.size.sm};\n  }\n`;\n\ntype ListItemType = {\n  id: number;\n  image: {\n    src: string;\n    srcset: string;\n  };\n  title: string;\n  caption?: string;\n};\n\ntype MediaListItemProps = {\n  item: ListItemType;\n  ratio: ImageRatio;\n  mediaType: MediaType;\n  size?: number;\n};\n\nconst MediaListItem = ({\n  item,\n  ratio,\n  mediaType,\n  size,\n}: MediaListItemProps) => {\n  const [height, width] = getImageHeightAndWidth(ratio, size);\n\n  return (\n    <div style={{ width }}>\n      <Link to={`/${mediaType}/${item.id}`}>\n        <Figure>\n          <picture>\n            {item.image.src ? (\n              <Image\n                aspectRatio={ratio}\n                inlineSize={width}\n                blockSize={height}\n                alt={item.title}\n                loading=\"lazy\"\n                srcSet={item.image.srcset}\n                src={item.image.src}\n              />\n            ) : (\n              <Skeleton width={width} height={height} />\n            )}\n          </picture>\n          <Figcaption inlineSize={width}>\n            {item.title || (\n              <>\n                <Skeleton />\n                <Skeleton width=\"65%\" />\n              </>\n            )}\n            {item.caption && <p>{item.caption}</p>}\n          </Figcaption>\n        </Figure>\n      </Link>\n    </div>\n  );\n};\n\nexport default MediaListItem;\n","import { useCallback, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport ArrowLeft from \"../icons/ArrowLeft\";\nimport ArrowRight from \"../icons/ArrowRight\";\nimport { ImageRatio, MediaType } from \"../types/common\";\nimport {\n  debounce,\n  getImageHeightAndWidth,\n  isTouchScreen,\n} from \"../utils/utils\";\nimport MediaListItem from \"./MediaListItem\";\n\nconst Div = styled.div`\n  position: relative;\n`;\n\nconst Arrow = styled.span<{ bsize: string; isHidden: boolean }>`\n  color: white;\n  background: rgba(20, 20, 20, 0.5);\n\n  cursor: pointer;\n  font-size: 6em;\n\n  position: absolute;\n  top: ${(props) => props.theme.size.xs};\n  height: ${(props) => props.bsize};\n  width: 4%;\n\n  text-align: center;\n  display: none;\n  justify-content: center;\n  align-items: center;\n\n  visibility: ${(props) => (props.isHidden ? \"hidden\" : \"visible\")};\n\n  &:nth-of-type(1) {\n    left: 0;\n  }\n\n  &:nth-of-type(2) {\n    right: 0;\n  }\n  ${Div}:hover & {\n    display: inline-flex;\n  }\n`;\n\nconst MediaScrollerUL = styled.ul`\n  display: grid;\n  grid-auto-flow: column;\n  gap: ${(props) => props.theme.size.xl};\n\n  padding-inline: ${(props) => props.theme.size.lg};\n  padding-block: ${(props) => props.theme.size.xs};\n\n  overflow-x: auto;\n  overscroll-behavior-inline: contain;\n  scroll-snap-type: inline mandatory;\n  scroll-padding-left: ${(props) => props.theme.size.xl};\n  scroll-padding-right: ${(props) => props.theme.size.xl};\n  scroll-padding-inline: ${(props) => props.theme.size.xl};\n\n  scrollbar-width: none;\n\n  &::-webkit-scrollbar {\n    width: 0;\n    height: 0;\n  }\n\n  @media (prefers-reduced-motion: no-preference) {\n    & {\n      scroll-behavior: smooth;\n    }\n  }\n`;\n\ntype MediaItemProps = {\n  inlineSize: string;\n};\n\nconst MediaItem = styled.li<MediaItemProps>`\n  display: inline-block;\n  inline-size: ${(props) => props.inlineSize};\n  block-size: min-content;\n`;\n\ntype ListItemType = {\n  id: number;\n  image: {\n    src: string;\n    srcset: string;\n  };\n  title: string;\n  caption?: string;\n};\n\ntype MediaScrollerProps = {\n  list: ListItemType[];\n  ratio?: ImageRatio;\n  loading?: boolean;\n  mediaType?: MediaType;\n};\n\nconst MediaScroller = ({\n  list,\n  ratio = \"1/1\",\n  loading = false,\n  mediaType = MediaType.Movie,\n}: MediaScrollerProps) => {\n  const [height, width] = getImageHeightAndWidth(ratio);\n  const mediaList = useRef<HTMLUListElement>(document.createElement(\"ul\"));\n  const [isHiddenLeftArrow, setIsHiddenLeftArrow] = useState(true);\n  const [isHiddenRightArrow, setIsHiddenRightArrow] = useState(false);\n\n  const scrollToRight = useCallback(() => {\n    const { offsetWidth, scrollLeft } = mediaList.current;\n    mediaList.current.scrollTo({\n      top: 0,\n      left: scrollLeft + offsetWidth,\n      behavior: \"smooth\",\n    });\n  }, []);\n\n  const scrollToLeft = useCallback(() => {\n    const { offsetWidth, scrollLeft } = mediaList.current;\n    mediaList.current.scrollTo({\n      top: 0,\n      left: scrollLeft - offsetWidth,\n      behavior: \"smooth\",\n    });\n  }, []);\n\n  const handleScroll = useCallback(() => {\n    if (!mediaList.current) return;\n    const { offsetWidth, scrollLeft, scrollWidth } = mediaList.current;\n\n    if (offsetWidth + scrollLeft >= scrollWidth) {\n      setIsHiddenRightArrow(true);\n    } else if (isHiddenRightArrow) {\n      setIsHiddenRightArrow(false);\n    }\n\n    if (scrollLeft === 0) {\n      setIsHiddenLeftArrow(true);\n    } else if (isHiddenLeftArrow) {\n      setIsHiddenLeftArrow(false);\n    }\n  }, [isHiddenLeftArrow, isHiddenRightArrow]);\n\n  const data = loading\n    ? (Array(10).fill({ image: {} }) as ListItemType[])\n    : list;\n\n  return (\n    <Div>\n      {!loading && !isTouchScreen() && (\n        <>\n          <Arrow\n            bsize={height}\n            onClick={scrollToLeft}\n            isHidden={isHiddenLeftArrow}\n          >\n            <ArrowLeft />\n          </Arrow>\n          <Arrow\n            bsize={height}\n            onClick={scrollToRight}\n            isHidden={isHiddenRightArrow}\n          >\n            <ArrowRight />\n          </Arrow>\n        </>\n      )}\n      <MediaScrollerUL ref={mediaList} onScroll={debounce(handleScroll)}>\n        {data.map((item, index) => (\n          <MediaItem inlineSize={width} key={item.id || index}>\n            <MediaListItem\n              key={item.id || index}\n              item={item}\n              ratio={ratio}\n              mediaType={mediaType}\n            />\n          </MediaItem>\n        ))}\n      </MediaScrollerUL>\n    </Div>\n  );\n};\n\nexport default MediaScroller;\n","import styled from \"styled-components\";\n\nexport const Header = styled.header`\n  display: grid;\n  grid-auto-flow: column;\n  align-items: center;\n  justify-content: start;\n  padding-inline: ${(props) => props.theme.size.lg};\n  padding-block: ${(props) => props.theme.size.xs};\n  grid-gap: ${(props) => props.theme.size.xs};\n\n  & h1 {\n    font-size: ${(props) => props.theme.size.xl};\n  }\n`;\n\nexport const ButtonContainer = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  width: min-content;\n  border-radius: ${(props) => props.theme.size.md};\n  border: 1px solid ${({ theme }) => theme.colors.text1};\n\n  & > button {\n    border: none;\n    border-radius: inherit;\n  }\n`;\n","export const fetcher = async (url: string) => {\r\n  try {\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (e) {\r\n    throw new Error('Api Error');\r\n  }\r\n};\r\n\r\nexport const multiFetcher = (...urls: string[]) =>\r\n  Promise.all(urls.map(fetcher));\r\n","import { useQuery } from \"react-query\";\r\nimport { queryClient } from \"../../App\";\r\nimport { fetcher } from \"../../services/api\";\r\nimport { Media, MediaType } from \"../../types/common\";\r\nimport { GenreMovies } from \"../../types/Movies\";\r\nimport { GenreTv } from \"../../types/Tv\";\r\nimport { queryKeys } from \"../../utils/constants\";\r\nimport {\r\n  getTVsFromApiResult,\r\n  getUrl,\r\n  updateCacheData,\r\n} from \"../../utils/utils\";\r\n\r\nfunction useContentByGenre(type: MediaType, genreId: number, enabled = false) {\r\n  return useQuery<\r\n    GenreMovies | GenreTv,\r\n    string,\r\n    Media[],\r\n    [MediaType, \"genre\", number]\r\n  >(\r\n    [type, \"genre\", genreId],\r\n    () => fetcher(getUrl(`discover/${type}`, `&with_genres=${genreId}`)),\r\n    {\r\n      select: (data) => {\r\n        return type === MediaType.Movie\r\n          ? (data as GenreMovies).results\r\n          : getTVsFromApiResult((data as GenreTv).results);\r\n      },\r\n      onSuccess: (data) => {\r\n        queryClient.setQueryData(\r\n          type === MediaType.Movie ? queryKeys.movies : queryKeys.tvs,\r\n          updateCacheData(data)\r\n        );\r\n      },\r\n      enabled,\r\n    }\r\n  );\r\n}\r\n\r\nexport default useContentByGenre;\r\n","import { useQuery } from 'react-query';\r\nimport { multiFetcher } from '../../services/api';\r\nimport { Genres } from '../../types/common';\r\nimport { getUrl } from '../../utils/utils';\r\n\r\nfunction useGenres() {\r\n  return useQuery<\r\n    { genres: Genres }[],\r\n    string,\r\n    { tvGenres: Genres; movieGenres: Genres },\r\n    'genres'\r\n  >(\r\n    'genres',\r\n    () => multiFetcher(getUrl('genre/tv/list'), getUrl('genre/movie/list')),\r\n    {\r\n      select: (data) => {\r\n        const [tv, movie] = data;\r\n        return { tvGenres: tv.genres, movieGenres: movie.genres };\r\n      },\r\n    }\r\n  );\r\n}\r\n\r\nexport default useGenres;\r\n","import { useEffect, useRef, useState } from 'react';\r\n\r\ninterface Options extends IntersectionObserverInit {\r\n  triggerOnce?: boolean;\r\n}\r\n\r\nconst useInView = ({\r\n  triggerOnce,\r\n  threshold = 0,\r\n  root = null,\r\n  rootMargin = '0%',\r\n}: Options) => {\r\n  const ref = useRef<any>(null);\r\n  const [inView, setInView] = useState(false);\r\n  useEffect(() => {\r\n    const node = ref?.current; // DOM Ref\r\n    const hasIOSupport = !!window.IntersectionObserver;\r\n\r\n    if (!hasIOSupport || !node) return;\r\n\r\n    const observer = new IntersectionObserver(\r\n      (entries, observer) => {\r\n        entries.forEach((entry) => {\r\n          setInView(entry.isIntersecting);\r\n          // after inView and triggeronce disconnect\r\n          if (entry.isIntersecting && triggerOnce) {\r\n            observer.disconnect();\r\n          }\r\n        });\r\n      },\r\n      { root, rootMargin, threshold }\r\n    );\r\n\r\n    observer.observe(node);\r\n\r\n    return () => observer.disconnect();\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return { ref, inView };\r\n};\r\n\r\nexport default useInView;\r\n","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../components/Button\";\nimport MediaScroller from \"../components/MediaScroller\";\nimport { ButtonContainer, Header } from \"../components/StyledElements\";\nimport useContentByGenre from \"../hooks/data/useContentByGenre\";\nimport useInView from \"../hooks/useInView\";\nimport { Genre, MediaType } from \"../types/common\";\nimport { getImageSrc, getReleaseDate } from \"../utils/utils\";\n\nconst Section = styled.section<{ isBackdrop: boolean }>`\n  background-image: ${(props) =>\n    props.isBackdrop\n      ? `linear-gradient(\n    135deg,\n    ${props.theme.colors.surface2},\n    ${props.theme.colors.surface4}\n  )`\n      : \"none\"};\n`;\ntype GenreSectionProps = { genre: Genre; index: number };\n\nconst GenreSection = ({ genre, index }: GenreSectionProps) => {\n  const { ref, inView } = useInView({ triggerOnce: true });\n  const [selectedMedia, setSelectedMedia] = useState<MediaType>(\n    MediaType.Movie\n  );\n  const isBackdrop = index % 2 === 0;\n\n  // conditionally fetch only if the section is in view.\n  const { data = [], isLoading } = useContentByGenre(\n    selectedMedia,\n    genre.id,\n    inView\n  );\n\n  const mediaScrollerList = data.map(\n    ({ id, title, poster_path, backdrop_path, release_date }) => ({\n      id,\n      title,\n      image: getImageSrc(\n        isBackdrop ? backdrop_path : poster_path,\n        isBackdrop ? \"backdrop\" : \"poster\"\n      ),\n      caption: getReleaseDate(release_date),\n    })\n  );\n\n  return (\n    <Section ref={ref} isBackdrop={isBackdrop}>\n      <Header>\n        <h1>{genre.name}</h1>\n        <ButtonContainer>\n          <Button\n            primary={selectedMedia === MediaType.Movie}\n            onClick={() => setSelectedMedia(MediaType.Movie)}\n          >\n            {MediaType.Movie}\n          </Button>\n          <Button\n            primary={selectedMedia === MediaType.Tv}\n            onClick={() => setSelectedMedia(MediaType.Tv)}\n          >\n            {MediaType.Tv}\n          </Button>\n        </ButtonContainer>\n      </Header>\n      <MediaScroller\n        list={mediaScrollerList}\n        ratio={isBackdrop ? \"16/9\" : \"2/3\"}\n        // if not in the view just render loading screen\n        loading={inView ? isLoading : true}\n        mediaType={selectedMedia}\n      />\n    </Section>\n  );\n};\n\nexport default GenreSection;\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport Button from \"../components/Button\";\nimport ButtonGroup from \"../components/ButtonGroup\";\nimport MediaScroller from \"../components/MediaScroller\";\nimport { ButtonContainer, Header } from \"../components/StyledElements\";\nimport useContentByGenre from \"../hooks/data/useContentByGenre\";\nimport useGenres from \"../hooks/data/useGenres\";\nimport { MediaType } from \"../types/common\";\nimport { getImageSrc, getReleaseDate } from \"../utils/utils\";\nimport GenreSection from \"./GenreSection\";\n\nconst ContentByGenres = () => {\n  const [selectedMedia, setSelectedMedia] = useState<MediaType>(\n    MediaType.Movie\n  );\n  const { data, isLoading } = useGenres();\n  const { tvGenres = [], movieGenres = [] } = data || {};\n  const tvGenresId = tvGenres.map(({ id }) => id);\n  const commonGenres = movieGenres.filter(({ id }) => tvGenresId.includes(id));\n  const genres = selectedMedia === MediaType.Movie ? movieGenres : tvGenres;\n  const [selectedButtonId, setSelectedButtonId] = useState(genres[0]?.id);\n\n  const buttonListItems = useMemo(\n    () =>\n      genres.map(({ id, name }) => ({\n        id,\n        label: name,\n        isSelected: id === selectedButtonId,\n        onClick: (e: React.MouseEvent<HTMLButtonElement>) => {\n          const { buttonId } = e.currentTarget.dataset;\n          if (buttonId) {\n            setSelectedButtonId(parseInt(buttonId));\n          }\n        },\n      })),\n    [genres, selectedButtonId]\n  );\n\n  useEffect(() => {\n    setSelectedButtonId(genres[0]?.id);\n  }, [genres]);\n\n  const { data: genreData = [], isLoading: genreDataIsLoading } =\n    useContentByGenre(selectedMedia, selectedButtonId, true);\n\n  const mediaScrollerList = genreData.map(\n    ({ id, title, poster_path, release_date }) => ({\n      id,\n      title,\n      image: getImageSrc(poster_path, \"poster\"),\n      caption: getReleaseDate(release_date),\n    })\n  );\n\n  return (\n    <>\n      {isLoading ? (\n        <MediaScroller list={[]} loading ratio={\"2/3\"} />\n      ) : (\n        <>\n          <section>\n            <Header>\n              <h1>Genres</h1>\n              <ButtonContainer>\n                <Button\n                  primary={selectedMedia === MediaType.Movie}\n                  onClick={() => setSelectedMedia(MediaType.Movie)}\n                >\n                  {MediaType.Movie}\n                </Button>\n                <Button\n                  primary={selectedMedia === MediaType.Tv}\n                  onClick={() => setSelectedMedia(MediaType.Tv)}\n                >\n                  {MediaType.Tv}\n                </Button>\n              </ButtonContainer>\n            </Header>\n            <ButtonGroup items={buttonListItems} />\n            <MediaScroller\n              list={mediaScrollerList}\n              ratio={\"2/3\"}\n              loading={genreDataIsLoading}\n              mediaType={selectedMedia}\n            />\n          </section>\n\n          {commonGenres.map((genre, index) => (\n            <GenreSection genre={genre} key={genre.id} index={index} />\n          ))}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ContentByGenres;\n","import { useQuery } from \"react-query\";\r\nimport { queryClient } from \"../../App\";\r\nimport { fetcher } from \"../../services/api\";\r\nimport { Media, MovieType } from \"../../types/common\";\r\nimport { PopularMovies, UpcomingMovies } from \"../../types/Movies\";\r\nimport { queryKeys } from \"../../utils/constants\";\r\nimport { getUrl, updateCacheData } from \"../../utils/utils\";\r\n\r\nfunction useDiscoverMovies(type: MovieType) {\r\n  return useQuery<\r\n    UpcomingMovies | PopularMovies,\r\n    string,\r\n    Media[],\r\n    [\"movie\", MovieType]\r\n  >([\"movie\", type], () => fetcher(getUrl(`movie/${type}`)), {\r\n    select: (data) => {\r\n      return type === MovieType.Upcoming\r\n        ? (data as UpcomingMovies).results\r\n        : (data as PopularMovies).results;\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.setQueryData<Media[]>(\r\n        queryKeys.movies,\r\n        updateCacheData(data)\r\n      );\r\n    },\r\n  });\r\n}\r\n\r\nexport default useDiscoverMovies;\r\n","import { useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../components/Button\";\nimport MediaScroller from \"../components/MediaScroller\";\nimport { ButtonContainer, Header } from \"../components/StyledElements\";\nimport useDiscoverMovies from \"../hooks/data/useDiscoverMovies\";\nimport { MovieType } from \"../types/common\";\nimport { getImageSrc, getReleaseDate } from \"../utils/utils\";\n\nconst Section = styled.section`\n  background-image: linear-gradient(\n    135deg,\n    ${(props) => props.theme.colors.surface2},\n    ${(props) => props.theme.colors.surface4}\n  );\n`;\n\nconst DiscoverMovies = () => {\n  const [movieType, setMovieType] = useState<MovieType>(MovieType.Popular);\n\n  const { data = [], isLoading } = useDiscoverMovies(movieType);\n\n  const mediaScrollerList = data.map(\n    ({ id, title, backdrop_path, release_date }) => ({\n      id,\n      title,\n      image: getImageSrc(backdrop_path, \"backdrop\"),\n      caption: getReleaseDate(release_date),\n    })\n  );\n\n  const handleButton = useCallback(\n    () =>\n      setMovieType(\n        movieType === MovieType.Popular ? MovieType.Upcoming : MovieType.Popular\n      ),\n    [movieType]\n  );\n\n  return (\n    <Section id=\"discover-movies\">\n      <Header>\n        <h1>Discover Movies</h1>\n        <ButtonContainer>\n          <Button\n            primary={movieType === MovieType.Popular}\n            disabled={movieType === MovieType.Popular}\n            onClick={handleButton}\n          >\n            Popular\n          </Button>\n          <Button\n            primary={movieType === MovieType.Upcoming}\n            disabled={movieType === MovieType.Upcoming}\n            onClick={handleButton}\n          >\n            Upcoming\n          </Button>\n        </ButtonContainer>\n      </Header>\n\n      <MediaScroller\n        list={mediaScrollerList}\n        loading={isLoading}\n        ratio=\"16/9\"\n      />\n    </Section>\n  );\n};\n\nexport default DiscoverMovies;\n","import { useQuery } from \"react-query\";\r\nimport { queryClient } from \"../../App\";\r\nimport { fetcher } from \"../../services/api\";\r\nimport { Media, MediaType } from \"../../types/common\";\r\nimport { TrendingMovies } from \"../../types/Movies\";\r\nimport { TrendingTv } from \"../../types/Tv\";\r\nimport { queryKeys } from \"../../utils/constants\";\r\nimport {\r\n  getTVsFromApiResult,\r\n  getUrl,\r\n  updateCacheData,\r\n} from \"../../utils/utils\";\r\n\r\nfunction useTrending(type: MediaType) {\r\n  return useQuery<\r\n    TrendingMovies | TrendingTv,\r\n    string,\r\n    Media[],\r\n    [MediaType, \"trending\"]\r\n  >([type, \"trending\"], () => fetcher(getUrl(`trending/${type}/day`)), {\r\n    select: (data) => {\r\n      return type === MediaType.Movie\r\n        ? (data as TrendingMovies).results\r\n        : getTVsFromApiResult((data as TrendingTv).results);\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.setQueryData<Media[]>(\r\n        type === MediaType.Movie ? queryKeys.movies : queryKeys.tvs,\r\n        updateCacheData(data)\r\n      );\r\n    },\r\n  });\r\n}\r\n\r\nexport default useTrending;\r\n","import { useCallback, useState } from \"react\";\nimport Button from \"../components/Button\";\nimport MediaScroller from \"../components/MediaScroller\";\nimport { ButtonContainer, Header } from \"../components/StyledElements\";\nimport useTrending from \"../hooks/data/useTrending\";\nimport { MediaType } from \"../types/common\";\nimport { getImageSrc, getReleaseDate } from \"../utils/utils\";\n\nconst Trending = () => {\n  const [selectedMedia, setSelectedMedia] = useState<MediaType>(\n    MediaType.Movie\n  );\n\n  const { data = [], isLoading } = useTrending(selectedMedia);\n\n  const mediaScrollerList = data.map(\n    ({ id, title, poster_path, release_date }) => ({\n      id,\n      title,\n      image: getImageSrc(poster_path, \"poster\"),\n      caption: getReleaseDate(release_date),\n    })\n  );\n\n  const handleButton = useCallback(\n    () =>\n      setSelectedMedia(\n        selectedMedia === MediaType.Movie ? MediaType.Tv : MediaType.Movie\n      ),\n    [selectedMedia]\n  );\n\n  return (\n    <section id=\"trending\">\n      <Header>\n        <h1>Trending</h1>\n        <ButtonContainer>\n          <Button\n            primary={selectedMedia === MediaType.Movie}\n            disabled={selectedMedia === MediaType.Movie}\n            onClick={handleButton}\n          >\n            {MediaType.Movie}\n          </Button>\n          <Button\n            primary={selectedMedia === MediaType.Tv}\n            disabled={selectedMedia === MediaType.Tv}\n            onClick={handleButton}\n          >\n            {MediaType.Tv}\n          </Button>\n        </ButtonContainer>\n      </Header>\n\n      <MediaScroller\n        list={mediaScrollerList}\n        ratio=\"2/3\"\n        loading={isLoading}\n        mediaType={selectedMedia}\n      />\n    </section>\n  );\n};\n\nexport default Trending;\n","import { RouteComponentProps } from \"@reach/router\";\nimport ContentByGenres from \"./ContentByGenres\";\nimport DiscoverMovies from \"./DiscoverMovies\";\nimport Trending from \"./Trending\";\n\nconst Home = (props: RouteComponentProps) => (\n  <>\n    <Trending />\n    <DiscoverMovies />\n    <ContentByGenres />\n  </>\n);\n\nexport default Home;\n","import { useQuery } from \"react-query\";\nimport { queryClient } from \"../../App\";\nimport { fetcher } from \"../../services/api\";\nimport { Movie } from \"../../types/Movies\";\nimport { queryKeys } from \"../../utils/constants\";\nimport { getUrl } from \"../../utils/utils\";\n\nfunction useMovie(id: number) {\n  return useQuery<Movie, number, Movie, [\"movie\", number]>(\n    [\"movie\", id],\n    () =>\n      fetcher(\n        getUrl(\n          `movie/${id}`,\n          \"&append_to_response=recommendations,videos,credits\"\n        )\n      ),\n    {\n      initialData: () => {\n        const queryData = queryClient.getQueryData<Movie[]>(queryKeys.movies);\n        const movie = queryData?.find((data) => data.id === id);\n        return movie;\n      },\n      staleTime: 0,\n    }\n  );\n}\n\nexport default useMovie;\n","import { RouteComponentProps, useParams } from \"@reach/router\";\nimport styled from \"styled-components\";\nimport MediaListItem from \"../components/MediaListItem\";\nimport MediaScroller from \"../components/MediaScroller\";\nimport { Header } from \"../components/StyledElements\";\nimport useMovie from \"../hooks/data/useMovie\";\nimport { ImageRatio, MediaType } from \"../types/common\";\nimport {\n  getBackgroundImageSrc,\n  getImageHeightAndWidth,\n  getImageSrc,\n  getReleaseDate,\n  minuteToTime,\n} from \"../utils/utils\";\n\nconst MovieContainer = styled.div`\n  background-image: linear-gradient(\n    to right,\n    ${(props) => props.theme.colors.surface2},\n    ${(props) => props.theme.colors.surface4}\n  );\n`;\n\nconst ImageContainer = styled.div<{\n  img?: string;\n}>`\n  display: flex;\n  justify-content: center;\n  gap: ${(props) => props.theme.size.lg};\n  padding-block: ${(props) => props.theme.size.xxl};\n  padding-inline: calc(${(props) => props.theme.size.xxl} * 4);\n  background-image: linear-gradient(\n      to right,\n      ${(props) => props.theme.getColorWithOpacity(\"surface1\", 0.95)},\n      ${(props) => props.theme.getColorWithOpacity(\"surface2\", 0.9)}\n    ),\n    url(${(props) => props.img});\n\n  background-size: cover;\n  background-position: center;\n  border-radius: 1ex;\n\n  @media ${({ theme }) => theme.mediaQueries.below768} {\n    flex-direction: column;\n    align-items: center;\n    flex-wrap: wrap;\n    padding-inline: ${(props) => props.theme.size.xxl};\n  }\n`;\n\nconst MovieDescription = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: ${(props) => props.theme.size.xl};\n\n  .movieHeading > h1 {\n    font-size: ${(props) => props.theme.size.xxl};\n    line-height: ${(props) => props.theme.size.xxl};\n\n    font-weight: 600;\n    & > span {\n      font-weight: 400;\n    }\n  }\n  .movieFacts {\n    display: flex;\n    line-height: ${(props) => props.theme.size.xxl};\n\n    gap: ${(props) => props.theme.size.xxl};\n    & > span {\n      white-space: nowrap;\n    }\n  }\n  .movieGenres {\n    display: flex;\n    flex-wrap: wrap;\n    gap: ${(props) => props.theme.size.sm};\n  }\n`;\n\nconst Figure = styled.figure`\n  background-color: ${(props) => props.theme.colors.surface2};\n  border-radius: 1ex;\n  height: 100%;\n\n  & > figcaption {\n    line-height: ${(props) => props.theme.size.lg};\n    padding: ${(props) => props.theme.size.xs};\n    text-align: center;\n    padding-top: 0;\n    width: 100%;\n    font-weight: 600;\n    font-size: ${(props) => props.theme.size.md};\n  }\n`;\nconst Actors = styled.section`\n  background-image: ${(props) =>\n    `linear-gradient(\n    135deg,\n    ${props.theme.colors.surface2},\n    ${props.theme.colors.surface4}\n  )`};\n`;\n\nconst Recommendations = styled.section<{ gridItemSize: string }>`\n  .recommendationsGrid {\n    display: grid;\n    grid-template-columns: repeat(\n      auto-fit,\n      minmax(${(props) => props.gridItemSize}, 1fr)\n    );\n    gap: ${(props) => props.theme.size.xl};\n\n    padding-inline: ${(props) => props.theme.size.lg};\n    padding-block: ${(props) => props.theme.size.xs};\n\n    & > div {\n      justify-self: center;\n    }\n  }\n`;\n\ntype ImageProps = {\n  aspectRatio: ImageRatio;\n  inlineSize: string;\n  blockSize: string;\n};\nconst Image = styled.img<ImageProps>`\n  inline-size: ${(props) => props.inlineSize};\n  block-size: ${(props) => props.blockSize};\n\n  aspect-ratio: ${(props) => props.aspectRatio};\n\n  object-fit: cover;\n\n  border-top-right-radius: 1ex;\n  border-top-left-radius: 1ex;\n\n  border: none;\n  overflow: hidden;\n  background-image: ${(props) =>\n    `linear-gradient(to bottom, ${props.theme.colors.surface1}, ${props.theme.colors.surface2})`};\n`;\n\ninterface MovieProps extends RouteComponentProps {\n  movieId?: string;\n}\n\nconst Movie = (props: MovieProps) => {\n  const { movieId } = useParams();\n  const { data, isLoading } = useMovie(parseInt(movieId));\n  console.log(data);\n  const imageSrc = getImageSrc(data?.poster_path, \"poster\");\n  const [height, width] = getImageHeightAndWidth(\"2/3\", 20);\n  const bgImageSrc = data?.backdrop_path\n    ? getBackgroundImageSrc(data?.backdrop_path)\n    : undefined;\n\n  const actors = data?.credits?.cast || [];\n  const recommendations = data?.recommendations?.results || [];\n  const actorsList = actors.map(({ id, name, character, profile_path }) => ({\n    id,\n    title: name,\n    image: getImageSrc(profile_path, \"profile\"),\n    caption: character,\n  }));\n  const recommendationsList = recommendations\n    .slice(0, 12)\n    .map(({ id, title, backdrop_path, release_date }) => ({\n      id,\n      title,\n      image: getImageSrc(backdrop_path, \"backdrop\"),\n      caption: getReleaseDate(release_date),\n    }));\n  const [_, recommendationGridItemWidth] = getImageHeightAndWidth(\"16/9\", 7);\n\n  return (\n    <>\n      <MovieContainer>\n        <ImageContainer img={bgImageSrc}>\n          <Figure>\n            <picture>\n              <Image\n                aspectRatio=\"2/3\"\n                inlineSize={width}\n                blockSize={height}\n                alt={data?.title}\n                loading=\"lazy\"\n                srcSet={imageSrc.srcset}\n                src={imageSrc.src}\n              />\n            </picture>\n            <figcaption>\n              {getReleaseDate(data?.release_date || Date.now().toString())}\n            </figcaption>\n          </Figure>\n          <MovieDescription>\n            <div className=\"movieHeading\">\n              <h1>\n                {data?.title}\n                <span>\n                  {`(${new Date(\n                    data?.release_date || Date.now()\n                  ).getFullYear()})`}\n                </span>\n              </h1>\n              <div className=\"movieFacts\">\n                <span>\n                  {getReleaseDate(data?.release_date || Date.now().toString())}\n                </span>\n                {data?.runtime ? (\n                  <span>{minuteToTime(data?.runtime)}</span>\n                ) : null}\n              </div>\n            </div>\n            {data?.tagline ? <h4>{data.tagline}</h4> : null}\n\n            <div className=\"movieGenres\">\n              {data?.genres?.map((genre) => (\n                <span key={genre.id}>{genre.name}</span>\n              ))}\n            </div>\n            <div>\n              <h3>Status</h3>\n              <p>{data?.status}</p>\n            </div>\n            <div>\n              <h3>Overview</h3>\n              <p>{data?.overview}</p>\n            </div>\n          </MovieDescription>\n        </ImageContainer>\n      </MovieContainer>\n      <Actors id=\"actors\">\n        <Header>\n          <h1>Actors</h1>\n        </Header>\n        <MediaScroller\n          list={actorsList}\n          ratio=\"2/3\"\n          loading={isLoading}\n          mediaType={MediaType.Person}\n        />\n      </Actors>\n\n      {recommendationsList.length ? (\n        <Recommendations\n          id=\"recommendations\"\n          gridItemSize={recommendationGridItemWidth}\n        >\n          <Header>\n            <h1>Recommendations</h1>\n          </Header>\n\n          <div className=\"recommendationsGrid\">\n            {recommendationsList.map((item, index) => (\n              <MediaListItem\n                key={item.id || index}\n                item={item}\n                ratio=\"16/9\"\n                mediaType={MediaType.Movie}\n                size={7}\n              />\n            ))}\n          </div>\n        </Recommendations>\n      ) : null}\n    </>\n  );\n};\n\nexport default Movie;\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const getTheme = (isDarkMode = false) => {\r\n  /* brand foundation */\r\n  const hue = \"200\";\r\n  const saturation = \"100%\";\r\n  const lightness = \"50%\";\r\n\r\n  /* light */\r\n  const light = {\r\n    brand: `hsl(${hue} ${saturation} ${lightness}`,\r\n    text1: `hsl(${hue} ${saturation} 10%)`,\r\n    text2: `hsl(${hue} 30% 30%)`,\r\n    surface1: `hsl(${hue} 25% 90%)`,\r\n    surface2: `hsl(${hue} 20% 99%)`,\r\n    surface3: `hsl(${hue} 20% 92%)`,\r\n    surface4: `hsl(${hue} 20% 85%)`,\r\n    surfaceShadow: `hsl(${hue} 10% 20%)`,\r\n  };\r\n\r\n  const dark = {\r\n    brand: `hsl(${hue} calc(${saturation} / 2) calc(${lightness} / 1.5))`,\r\n    text1: `hsl(${hue} 15% 85%)`,\r\n    text2: `hsl(${hue} 5% 65%)`,\r\n    surface1: `hsl(${hue} 10% 10%)`,\r\n    surface2: `hsl(${hue} 10% 15%)`,\r\n    surface3: `hsl(${hue} 5% 20%)`,\r\n    surface4: `hsl(${hue} 5% 25%)`,\r\n    surfaceShadow: `hsl(${hue} 50% 3%)`,\r\n  };\r\n\r\n  function sizeStepUp(n: number, up = true): string {\r\n    let result = 1;\r\n    const typeScale = 1.25;\r\n    while (n > 1) {\r\n      result = up ? result * typeScale : result / typeScale;\r\n      n--;\r\n    }\r\n    return `calc(1rem * ${result})`;\r\n  }\r\n  const colors = isDarkMode ? dark : light;\r\n  return {\r\n    colors,\r\n    size: {\r\n      xxxs: sizeStepUp(5, false),\r\n      xxs: sizeStepUp(4, false),\r\n      xs: sizeStepUp(3, false),\r\n      sm: sizeStepUp(2, false),\r\n      md: sizeStepUp(1),\r\n      lg: sizeStepUp(2),\r\n      xl: sizeStepUp(3),\r\n      xxl: sizeStepUp(4),\r\n      xxxl: sizeStepUp(5),\r\n    },\r\n    mediaQueries: {\r\n      below1400: \"only screen and (max-width: 1400px)\",\r\n      below768: \"only screen and (max-width: 768px)\",\r\n      below375: \"only screen and (max-width: 375px)\",\r\n    },\r\n    getColorWithOpacity: (color: keyof typeof colors, opacity: number) => {\r\n      const colorStr = colors[color];\r\n      const [hue, saturation, lightness] =\r\n        colorStr.match(/\\d+/g)?.map(Number) ?? [];\r\n      return `hsla(${hue}, ${saturation}%, ${lightness}%, ${opacity})`;\r\n    },\r\n  };\r\n};\r\n\r\nconst theme = getTheme();\r\ntype ThemeType = typeof theme;\r\ndeclare module \"styled-components\" {\r\n  export interface DefaultTheme extends ThemeType {}\r\n}\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  html {\r\n    /* grow as per screen width */\r\n    font-size: calc(1px + 1vw);\r\n    line-height: calc(1.5rem + 0.5vw);\r\n    block-size: 100%;\r\n    background-color: ${({ theme }) => theme.colors.surface1};\r\n    color: ${({ theme }) => theme.colors.text1};\r\n    font-family: 'Roboto Mono', monospace, system-ui, sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n\r\n    @media ${({ theme }) => theme.mediaQueries.below1400} {\r\n      font-size: 16px;\r\n    }\r\n\r\n    @media ${({ theme }) => theme.mediaQueries.below768} {\r\n      font-size: 14px;\r\n    }\r\n\r\n    @media ${({ theme }) => theme.mediaQueries.below375} {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  body {\r\n    background-color: ${({ theme }) => theme.colors.surface1};\r\n  }\r\n\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  section {\r\n    padding-block: 1rem;\r\n  }\r\n\r\n  a {\r\n    color: inherit;\r\n    text-decoration: none;\r\n  }\r\n`;\r\n","import { Router } from \"@reach/router\";\nimport React from \"react\";\nimport { SkeletonTheme } from \"react-loading-skeleton\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { ThemeProvider } from \"styled-components\";\nimport { AppContextProvider } from \"./AppContext\";\nimport useDarkMode from \"./hooks/useDarkMode\";\nimport Home from \"./sections/Home\";\nimport Movie from \"./sections/Movie\";\nimport { getTheme, GlobalStyles } from \"./styles/theme\";\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n    },\n  },\n});\n\nfunction App() {\n  const isDarkMode = useDarkMode();\n  const theme = getTheme(isDarkMode);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      <AppContextProvider>\n        <SkeletonTheme\n          color={theme.colors.surface2}\n          highlightColor={theme.colors.surface1}\n        >\n          <QueryClientProvider client={queryClient}>\n            <ReactQueryDevtools />\n            <Router>\n              <Home path=\"/\" />\n              <Home path=\"/movie-hub\" />\n              <Movie path=\"/movie/:movieId\" />\n            </Router>\n          </QueryClientProvider>\n        </SkeletonTheme>\n      </AppContextProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}